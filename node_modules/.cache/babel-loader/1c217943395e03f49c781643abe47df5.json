{"ast":null,"code":"import _toConsumableArray from \"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthSessionMissingError, AuthInvalidTokenResponseError, AuthUnknownError, isAuthApiError, isAuthError, isAuthRetryableFetchError } from './lib/errors';\nimport { _request, _sessionResponse, _sessionResponsePassword, _userResponse, _ssoResponse } from './lib/fetch';\nimport { decodeJWTPayload, Deferred, getItemAsync, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, supportsLocalStorage, parseParametersFromURL, getCodeChallengeAndMethod } from './lib/helpers';\nimport { localStorageAdapter, memoryLocalStorageAdapter } from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\nimport { version } from './lib/version';\nimport { LockAcquireTimeoutError, navigatorLock } from './lib/locks';\npolyfillGlobalThis(); // Make \"globalThis\" available\n\nvar DEFAULT_OPTIONS = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n  flowType: 'implicit',\n  debug: false,\n  hasCustomAuthorizationHeader: false\n};\n/** Current session will be checked for refresh at this interval. */\n\nvar AUTO_REFRESH_TICK_DURATION = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\n\nvar AUTO_REFRESH_TICK_THRESHOLD = 3;\n\nfunction lockNoOp(_x, _x2, _x3) {\n  return _lockNoOp.apply(this, arguments);\n}\n\nfunction _lockNoOp() {\n  _lockNoOp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee101(name, acquireTimeout, fn) {\n    return _regeneratorRuntime().wrap(function _callee101$(_context101) {\n      while (1) {\n        switch (_context101.prev = _context101.next) {\n          case 0:\n            _context101.next = 2;\n            return fn();\n\n          case 2:\n            return _context101.abrupt(\"return\", _context101.sent);\n\n          case 3:\n          case \"end\":\n            return _context101.stop();\n        }\n      }\n    }, _callee101);\n  }));\n  return _lockNoOp.apply(this, arguments);\n}\n\nvar GoTrueClient = /*#__PURE__*/function () {\n  /**\n   * Create a new client for use in the browser.\n   */\n  function GoTrueClient(options) {\n    var _this = this;\n\n    _classCallCheck(this, GoTrueClient);\n\n    var _a, _b;\n\n    this.memoryStorage = null;\n    this.stateChangeEmitters = new Map();\n    this.autoRefreshTicker = null;\n    this.visibilityChangedCallback = null;\n    this.refreshingDeferred = null;\n    /**\n     * Keeps track of the async client initialization.\n     * When null or not yet resolved the auth state is `unknown`\n     * Once resolved the the auth state is known and it's save to call any further client methods.\n     * Keep extra care to never reject or throw uncaught errors\n     */\n\n    this.initializePromise = null;\n    this.detectSessionInUrl = true;\n    this.hasCustomAuthorizationHeader = false;\n    this.suppressGetSessionWarning = false;\n    this.lockAcquired = false;\n    this.pendingInLock = [];\n    /**\n     * Used to broadcast state change events to other tabs listening.\n     */\n\n    this.broadcastChannel = null;\n    this.logger = console.log;\n    this.instanceID = GoTrueClient.nextInstanceID;\n    GoTrueClient.nextInstanceID += 1;\n\n    if (this.instanceID > 0 && isBrowser()) {\n      console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n    }\n\n    var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n    this.logDebugMessages = !!settings.debug;\n\n    if (typeof settings.debug === 'function') {\n      this.logger = settings.debug;\n    }\n\n    this.persistSession = settings.persistSession;\n    this.storageKey = settings.storageKey;\n    this.autoRefreshToken = settings.autoRefreshToken;\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch\n    });\n    this.url = settings.url;\n    this.headers = settings.headers;\n    this.fetch = resolveFetch(settings.fetch);\n    this.lock = settings.lock || lockNoOp;\n    this.detectSessionInUrl = settings.detectSessionInUrl;\n    this.flowType = settings.flowType;\n    this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n\n    if (settings.lock) {\n      this.lock = settings.lock;\n    } else if (isBrowser() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n      this.lock = navigatorLock;\n    } else {\n      this.lock = lockNoOp;\n    }\n\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)\n    };\n\n    if (this.persistSession) {\n      if (settings.storage) {\n        this.storage = settings.storage;\n      } else {\n        if (supportsLocalStorage()) {\n          this.storage = localStorageAdapter;\n        } else {\n          this.memoryStorage = {};\n          this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n        }\n      }\n    } else {\n      this.memoryStorage = {};\n      this.storage = memoryLocalStorageAdapter(this.memoryStorage);\n    }\n\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      try {\n        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n      } catch (e) {\n        console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n      }\n\n      (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this._debug('received broadcast notification from other tab or client', event);\n\n                  _context.next = 3;\n                  return _this._notifyAllSubscribers(event.data.event, event.data.session, false);\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x4) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n\n    this.initialize();\n  }\n\n  _createClass(GoTrueClient, [{\n    key: \"_debug\",\n    value: function _debug() {\n      if (this.logDebugMessages) {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        this.logger.apply(this, [\"GoTrueClient@\".concat(this.instanceID, \" (\").concat(version, \") \").concat(new Date().toISOString())].concat(args));\n      }\n\n      return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this2 = this;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.initializePromise) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.initializePromise;\n\n              case 3:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 4:\n                this.initializePromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                  return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return _this2._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    _context2.next = 2;\n                                    return _this2._initialize();\n\n                                  case 2:\n                                    return _context2.abrupt(\"return\", _context2.sent);\n\n                                  case 3:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, _callee2);\n                          })));\n\n                        case 2:\n                          return _context3.abrupt(\"return\", _context3.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }))();\n                _context4.next = 7;\n                return this.initializePromise;\n\n              case 7:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function initialize() {\n        return _initialize2.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n\n  }, {\n    key: \"_initialize\",\n    value: function () {\n      var _initialize3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _this3 = this;\n\n        var isPKCEFlow, _yield$this$_getSessi, data, error, session, redirectType;\n\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n\n                if (!isBrowser()) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                _context6.next = 4;\n                return this._isPKCEFlow();\n\n              case 4:\n                _context6.t0 = _context6.sent;\n                _context6.next = 8;\n                break;\n\n              case 7:\n                _context6.t0 = false;\n\n              case 8:\n                isPKCEFlow = _context6.t0;\n\n                this._debug('#_initialize()', 'begin', 'is PKCE flow', isPKCEFlow);\n\n                if (!(isPKCEFlow || this.detectSessionInUrl && this._isImplicitGrantFlow())) {\n                  _context6.next = 29;\n                  break;\n                }\n\n                _context6.next = 13;\n                return this._getSessionFromURL(isPKCEFlow);\n\n              case 13:\n                _yield$this$_getSessi = _context6.sent;\n                data = _yield$this$_getSessi.data;\n                error = _yield$this$_getSessi.error;\n\n                if (!error) {\n                  _context6.next = 23;\n                  break;\n                }\n\n                this._debug('#_initialize()', 'error detecting session from URL', error); // hacky workaround to keep the existing session if there's an error returned from identity linking\n                // TODO: once error codes are ready, we should match against it instead of the message\n\n\n                if (!((error === null || error === void 0 ? void 0 : error.message) === 'Identity is already linked' || (error === null || error === void 0 ? void 0 : error.message) === 'Identity is already linked to another user')) {\n                  _context6.next = 20;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", {\n                  error: error\n                });\n\n              case 20:\n                _context6.next = 22;\n                return this._removeSession();\n\n              case 22:\n                return _context6.abrupt(\"return\", {\n                  error: error\n                });\n\n              case 23:\n                session = data.session, redirectType = data.redirectType;\n\n                this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n\n                _context6.next = 27;\n                return this._saveSession(session);\n\n              case 27:\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n                  return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (!(redirectType === 'recovery')) {\n                            _context5.next = 5;\n                            break;\n                          }\n\n                          _context5.next = 3;\n                          return _this3._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n\n                        case 3:\n                          _context5.next = 7;\n                          break;\n\n                        case 5:\n                          _context5.next = 7;\n                          return _this3._notifyAllSubscribers('SIGNED_IN', session);\n\n                        case 7:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                })), 0);\n                return _context6.abrupt(\"return\", {\n                  error: null\n                });\n\n              case 29:\n                _context6.next = 31;\n                return this._recoverAndRefresh();\n\n              case 31:\n                return _context6.abrupt(\"return\", {\n                  error: null\n                });\n\n              case 34:\n                _context6.prev = 34;\n                _context6.t1 = _context6[\"catch\"](0);\n\n                if (!isAuthError(_context6.t1)) {\n                  _context6.next = 38;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", {\n                  error: _context6.t1\n                });\n\n              case 38:\n                return _context6.abrupt(\"return\", {\n                  error: new AuthUnknownError('Unexpected error during initialization', _context6.t1)\n                });\n\n              case 39:\n                _context6.prev = 39;\n                _context6.next = 42;\n                return this._handleVisibilityChange();\n\n              case 42:\n                this._debug('#_initialize()', 'end');\n\n                return _context6.finish(39);\n\n              case 44:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 34, 39, 44]]);\n      }));\n\n      function _initialize() {\n        return _initialize3.apply(this, arguments);\n      }\n\n      return _initialize;\n    }()\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */\n\n  }, {\n    key: \"signInAnonymously\",\n    value: function () {\n      var _signInAnonymously = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(credentials) {\n        var _a, _b, _c, res, data, error, session, user;\n\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/signup\"), {\n                  headers: this.headers,\n                  body: {\n                    data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                    gotrue_meta_security: {\n                      captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n                    }\n                  },\n                  xform: _sessionResponse\n                });\n\n              case 3:\n                res = _context7.sent;\n                data = res.data, error = res.error;\n\n                if (!(error || !data)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                });\n\n              case 7:\n                session = data.session;\n                user = data.user;\n\n                if (!data.session) {\n                  _context7.next = 14;\n                  break;\n                }\n\n                _context7.next = 12;\n                return this._saveSession(data.session);\n\n              case 12:\n                _context7.next = 14;\n                return this._notifyAllSubscribers('SIGNED_IN', session);\n\n              case 14:\n                return _context7.abrupt(\"return\", {\n                  data: {\n                    user: user,\n                    session: session\n                  },\n                  error: null\n                });\n\n              case 17:\n                _context7.prev = 17;\n                _context7.t0 = _context7[\"catch\"](0);\n\n                if (!isAuthError(_context7.t0)) {\n                  _context7.next = 21;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: _context7.t0\n                });\n\n              case 21:\n                throw _context7.t0;\n\n              case 22:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 17]]);\n      }));\n\n      function signInAnonymously(_x5) {\n        return _signInAnonymously.apply(this, arguments);\n      }\n\n      return signInAnonymously;\n    }()\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n\n  }, {\n    key: \"signUp\",\n    value: function () {\n      var _signUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(credentials) {\n        var _a, _b, _c, res, email, password, options, codeChallenge, codeChallengeMethod, _yield$getCodeChallen, _yield$getCodeChallen2, phone, _password, _options, _res, data, error, session, user;\n\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n\n                if (!('email' in credentials)) {\n                  _context8.next = 18;\n                  break;\n                }\n\n                email = credentials.email, password = credentials.password, options = credentials.options;\n                codeChallenge = null;\n                codeChallengeMethod = null;\n\n                if (!(this.flowType === 'pkce')) {\n                  _context8.next = 13;\n                  break;\n                }\n\n                ;\n                _context8.next = 9;\n                return getCodeChallengeAndMethod(this.storage, this.storageKey);\n\n              case 9:\n                _yield$getCodeChallen = _context8.sent;\n                _yield$getCodeChallen2 = _slicedToArray(_yield$getCodeChallen, 2);\n                codeChallenge = _yield$getCodeChallen2[0];\n                codeChallengeMethod = _yield$getCodeChallen2[1];\n\n              case 13:\n                _context8.next = 15;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/signup\"), {\n                  headers: this.headers,\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                  body: {\n                    email: email,\n                    password: password,\n                    data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    },\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                  },\n                  xform: _sessionResponse\n                });\n\n              case 15:\n                res = _context8.sent;\n                _context8.next = 26;\n                break;\n\n              case 18:\n                if (!('phone' in credentials)) {\n                  _context8.next = 25;\n                  break;\n                }\n\n                phone = credentials.phone, _password = credentials.password, _options = credentials.options;\n                _context8.next = 22;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/signup\"), {\n                  headers: this.headers,\n                  body: {\n                    phone: phone,\n                    password: _password,\n                    data: (_b = _options === null || _options === void 0 ? void 0 : _options.data) !== null && _b !== void 0 ? _b : {},\n                    channel: (_c = _options === null || _options === void 0 ? void 0 : _options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                    gotrue_meta_security: {\n                      captcha_token: _options === null || _options === void 0 ? void 0 : _options.captchaToken\n                    }\n                  },\n                  xform: _sessionResponse\n                });\n\n              case 22:\n                res = _context8.sent;\n                _context8.next = 26;\n                break;\n\n              case 25:\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n\n              case 26:\n                _res = res, data = _res.data, error = _res.error;\n\n                if (!(error || !data)) {\n                  _context8.next = 29;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                });\n\n              case 29:\n                session = data.session;\n                user = data.user;\n\n                if (!data.session) {\n                  _context8.next = 36;\n                  break;\n                }\n\n                _context8.next = 34;\n                return this._saveSession(data.session);\n\n              case 34:\n                _context8.next = 36;\n                return this._notifyAllSubscribers('SIGNED_IN', session);\n\n              case 36:\n                return _context8.abrupt(\"return\", {\n                  data: {\n                    user: user,\n                    session: session\n                  },\n                  error: null\n                });\n\n              case 39:\n                _context8.prev = 39;\n                _context8.t0 = _context8[\"catch\"](0);\n\n                if (!isAuthError(_context8.t0)) {\n                  _context8.next = 43;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: _context8.t0\n                });\n\n              case 43:\n                throw _context8.t0;\n\n              case 44:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 39]]);\n      }));\n\n      function signUp(_x6) {\n        return _signUp.apply(this, arguments);\n      }\n\n      return signUp;\n    }()\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n\n  }, {\n    key: \"signInWithPassword\",\n    value: function () {\n      var _signInWithPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(credentials) {\n        var res, email, password, options, phone, _password2, _options2, _res2, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n\n                if (!('email' in credentials)) {\n                  _context9.next = 8;\n                  break;\n                }\n\n                email = credentials.email, password = credentials.password, options = credentials.options;\n                _context9.next = 5;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=password\"), {\n                  headers: this.headers,\n                  body: {\n                    email: email,\n                    password: password,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  xform: _sessionResponsePassword\n                });\n\n              case 5:\n                res = _context9.sent;\n                _context9.next = 16;\n                break;\n\n              case 8:\n                if (!('phone' in credentials)) {\n                  _context9.next = 15;\n                  break;\n                }\n\n                phone = credentials.phone, _password2 = credentials.password, _options2 = credentials.options;\n                _context9.next = 12;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=password\"), {\n                  headers: this.headers,\n                  body: {\n                    phone: phone,\n                    password: _password2,\n                    gotrue_meta_security: {\n                      captcha_token: _options2 === null || _options2 === void 0 ? void 0 : _options2.captchaToken\n                    }\n                  },\n                  xform: _sessionResponsePassword\n                });\n\n              case 12:\n                res = _context9.sent;\n                _context9.next = 16;\n                break;\n\n              case 15:\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n\n              case 16:\n                _res2 = res, data = _res2.data, error = _res2.error;\n\n                if (!error) {\n                  _context9.next = 21;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                });\n\n              case 21:\n                if (!(!data || !data.session || !data.user)) {\n                  _context9.next = 23;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: new AuthInvalidTokenResponseError()\n                });\n\n              case 23:\n                if (!data.session) {\n                  _context9.next = 28;\n                  break;\n                }\n\n                _context9.next = 26;\n                return this._saveSession(data.session);\n\n              case 26:\n                _context9.next = 28;\n                return this._notifyAllSubscribers('SIGNED_IN', data.session);\n\n              case 28:\n                return _context9.abrupt(\"return\", {\n                  data: Object.assign({\n                    user: data.user,\n                    session: data.session\n                  }, data.weak_password ? {\n                    weakPassword: data.weak_password\n                  } : null),\n                  error: error\n                });\n\n              case 31:\n                _context9.prev = 31;\n                _context9.t0 = _context9[\"catch\"](0);\n\n                if (!isAuthError(_context9.t0)) {\n                  _context9.next = 35;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: _context9.t0\n                });\n\n              case 35:\n                throw _context9.t0;\n\n              case 36:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 31]]);\n      }));\n\n      function signInWithPassword(_x7) {\n        return _signInWithPassword.apply(this, arguments);\n      }\n\n      return signInWithPassword;\n    }()\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n\n  }, {\n    key: \"signInWithOAuth\",\n    value: function () {\n      var _signInWithOAuth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(credentials) {\n        var _a, _b, _c, _d;\n\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this._handleProviderSignIn(credentials.provider, {\n                  redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                  scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                  queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                  skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n                });\n\n              case 2:\n                return _context10.abrupt(\"return\", _context10.sent);\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function signInWithOAuth(_x8) {\n        return _signInWithOAuth.apply(this, arguments);\n      }\n\n      return signInWithOAuth;\n    }()\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n\n  }, {\n    key: \"exchangeCodeForSession\",\n    value: function () {\n      var _exchangeCodeForSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(authCode) {\n        var _this4 = this;\n\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.initializePromise;\n\n              case 2:\n                return _context12.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n                  return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n                    while (1) {\n                      switch (_context11.prev = _context11.next) {\n                        case 0:\n                          return _context11.abrupt(\"return\", _this4._exchangeCodeForSession(authCode));\n\n                        case 1:\n                        case \"end\":\n                          return _context11.stop();\n                      }\n                    }\n                  }, _callee11);\n                }))));\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function exchangeCodeForSession(_x9) {\n        return _exchangeCodeForSession2.apply(this, arguments);\n      }\n\n      return exchangeCodeForSession;\n    }()\n  }, {\n    key: \"_exchangeCodeForSession\",\n    value: function () {\n      var _exchangeCodeForSession3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(authCode) {\n        var storageItem, _split, _split2, codeVerifier, redirectType, _yield$_request, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return getItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n\n              case 2:\n                storageItem = _context13.sent;\n                _split = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/'), _split2 = _slicedToArray(_split, 2), codeVerifier = _split2[0], redirectType = _split2[1];\n                _context13.next = 6;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=pkce\"), {\n                  headers: this.headers,\n                  body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier\n                  },\n                  xform: _sessionResponse\n                });\n\n              case 6:\n                _yield$_request = _context13.sent;\n                data = _yield$_request.data;\n                error = _yield$_request.error;\n                _context13.next = 11;\n                return removeItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n\n              case 11:\n                if (!error) {\n                  _context13.next = 15;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null,\n                    redirectType: null\n                  },\n                  error: error\n                });\n\n              case 15:\n                if (!(!data || !data.session || !data.user)) {\n                  _context13.next = 17;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null,\n                    redirectType: null\n                  },\n                  error: new AuthInvalidTokenResponseError()\n                });\n\n              case 17:\n                if (!data.session) {\n                  _context13.next = 22;\n                  break;\n                }\n\n                _context13.next = 20;\n                return this._saveSession(data.session);\n\n              case 20:\n                _context13.next = 22;\n                return this._notifyAllSubscribers('SIGNED_IN', data.session);\n\n              case 22:\n                return _context13.abrupt(\"return\", {\n                  data: Object.assign(Object.assign({}, data), {\n                    redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n                  }),\n                  error: error\n                });\n\n              case 23:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _exchangeCodeForSession(_x10) {\n        return _exchangeCodeForSession3.apply(this, arguments);\n      }\n\n      return _exchangeCodeForSession;\n    }()\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */\n\n  }, {\n    key: \"signInWithIdToken\",\n    value: function () {\n      var _signInWithIdToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(credentials) {\n        var options, provider, token, access_token, nonce, res, data, error;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.prev = 0;\n                options = credentials.options, provider = credentials.provider, token = credentials.token, access_token = credentials.access_token, nonce = credentials.nonce;\n                _context14.next = 4;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/token?grant_type=id_token\"), {\n                  headers: this.headers,\n                  body: {\n                    provider: provider,\n                    id_token: token,\n                    access_token: access_token,\n                    nonce: nonce,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  xform: _sessionResponse\n                });\n\n              case 4:\n                res = _context14.sent;\n                data = res.data, error = res.error;\n\n                if (!error) {\n                  _context14.next = 10;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                });\n\n              case 10:\n                if (!(!data || !data.session || !data.user)) {\n                  _context14.next = 12;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: new AuthInvalidTokenResponseError()\n                });\n\n              case 12:\n                if (!data.session) {\n                  _context14.next = 17;\n                  break;\n                }\n\n                _context14.next = 15;\n                return this._saveSession(data.session);\n\n              case 15:\n                _context14.next = 17;\n                return this._notifyAllSubscribers('SIGNED_IN', data.session);\n\n              case 17:\n                return _context14.abrupt(\"return\", {\n                  data: data,\n                  error: error\n                });\n\n              case 20:\n                _context14.prev = 20;\n                _context14.t0 = _context14[\"catch\"](0);\n\n                if (!isAuthError(_context14.t0)) {\n                  _context14.next = 24;\n                  break;\n                }\n\n                return _context14.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: _context14.t0\n                });\n\n              case 24:\n                throw _context14.t0;\n\n              case 25:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this, [[0, 20]]);\n      }));\n\n      function signInWithIdToken(_x11) {\n        return _signInWithIdToken.apply(this, arguments);\n      }\n\n      return signInWithIdToken;\n    }()\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n\n  }, {\n    key: \"signInWithOtp\",\n    value: function () {\n      var _signInWithOtp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(credentials) {\n        var _a, _b, _c, _d, _e, email, options, codeChallenge, codeChallengeMethod, _yield$getCodeChallen3, _yield$getCodeChallen4, _yield$_request2, error, phone, _options3, _yield$_request3, data, _error;\n\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.prev = 0;\n\n                if (!('email' in credentials)) {\n                  _context15.next = 18;\n                  break;\n                }\n\n                email = credentials.email, options = credentials.options;\n                codeChallenge = null;\n                codeChallengeMethod = null;\n\n                if (!(this.flowType === 'pkce')) {\n                  _context15.next = 13;\n                  break;\n                }\n\n                ;\n                _context15.next = 9;\n                return getCodeChallengeAndMethod(this.storage, this.storageKey);\n\n              case 9:\n                _yield$getCodeChallen3 = _context15.sent;\n                _yield$getCodeChallen4 = _slicedToArray(_yield$getCodeChallen3, 2);\n                codeChallenge = _yield$getCodeChallen4[0];\n                codeChallengeMethod = _yield$getCodeChallen4[1];\n\n              case 13:\n                _context15.next = 15;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/otp\"), {\n                  headers: this.headers,\n                  body: {\n                    email: email,\n                    data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                    create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    },\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                });\n\n              case 15:\n                _yield$_request2 = _context15.sent;\n                error = _yield$_request2.error;\n                return _context15.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                });\n\n              case 18:\n                if (!('phone' in credentials)) {\n                  _context15.next = 26;\n                  break;\n                }\n\n                phone = credentials.phone, _options3 = credentials.options;\n                _context15.next = 22;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/otp\"), {\n                  headers: this.headers,\n                  body: {\n                    phone: phone,\n                    data: (_c = _options3 === null || _options3 === void 0 ? void 0 : _options3.data) !== null && _c !== void 0 ? _c : {},\n                    create_user: (_d = _options3 === null || _options3 === void 0 ? void 0 : _options3.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                    gotrue_meta_security: {\n                      captcha_token: _options3 === null || _options3 === void 0 ? void 0 : _options3.captchaToken\n                    },\n                    channel: (_e = _options3 === null || _options3 === void 0 ? void 0 : _options3.channel) !== null && _e !== void 0 ? _e : 'sms'\n                  }\n                });\n\n              case 22:\n                _yield$_request3 = _context15.sent;\n                data = _yield$_request3.data;\n                _error = _yield$_request3.error;\n                return _context15.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null,\n                    messageId: data === null || data === void 0 ? void 0 : data.message_id\n                  },\n                  error: _error\n                });\n\n              case 26:\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n\n              case 29:\n                _context15.prev = 29;\n                _context15.t0 = _context15[\"catch\"](0);\n\n                if (!isAuthError(_context15.t0)) {\n                  _context15.next = 33;\n                  break;\n                }\n\n                return _context15.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: _context15.t0\n                });\n\n              case 33:\n                throw _context15.t0;\n\n              case 34:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[0, 29]]);\n      }));\n\n      function signInWithOtp(_x12) {\n        return _signInWithOtp.apply(this, arguments);\n      }\n\n      return signInWithOtp;\n    }()\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */\n\n  }, {\n    key: \"verifyOtp\",\n    value: function () {\n      var _verifyOtp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(params) {\n        var _a, _b, redirectTo, captchaToken, _yield$_request4, data, error, session, user;\n\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.prev = 0;\n                redirectTo = undefined;\n                captchaToken = undefined;\n\n                if ('options' in params) {\n                  redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n                  captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n                }\n\n                _context16.next = 6;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/verify\"), {\n                  headers: this.headers,\n                  body: Object.assign(Object.assign({}, params), {\n                    gotrue_meta_security: {\n                      captcha_token: captchaToken\n                    }\n                  }),\n                  redirectTo: redirectTo,\n                  xform: _sessionResponse\n                });\n\n              case 6:\n                _yield$_request4 = _context16.sent;\n                data = _yield$_request4.data;\n                error = _yield$_request4.error;\n\n                if (!error) {\n                  _context16.next = 11;\n                  break;\n                }\n\n                throw error;\n\n              case 11:\n                if (data) {\n                  _context16.next = 13;\n                  break;\n                }\n\n                throw new Error('An error occurred on token verification.');\n\n              case 13:\n                session = data.session;\n                user = data.user;\n\n                if (!(session === null || session === void 0 ? void 0 : session.access_token)) {\n                  _context16.next = 20;\n                  break;\n                }\n\n                _context16.next = 18;\n                return this._saveSession(session);\n\n              case 18:\n                _context16.next = 20;\n                return this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n\n              case 20:\n                return _context16.abrupt(\"return\", {\n                  data: {\n                    user: user,\n                    session: session\n                  },\n                  error: null\n                });\n\n              case 23:\n                _context16.prev = 23;\n                _context16.t0 = _context16[\"catch\"](0);\n\n                if (!isAuthError(_context16.t0)) {\n                  _context16.next = 27;\n                  break;\n                }\n\n                return _context16.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: _context16.t0\n                });\n\n              case 27:\n                throw _context16.t0;\n\n              case 28:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this, [[0, 23]]);\n      }));\n\n      function verifyOtp(_x13) {\n        return _verifyOtp.apply(this, arguments);\n      }\n\n      return verifyOtp;\n    }()\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n\n  }, {\n    key: \"signInWithSSO\",\n    value: function () {\n      var _signInWithSSO = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(params) {\n        var _a, _b, _c, codeChallenge, codeChallengeMethod, _yield$getCodeChallen5, _yield$getCodeChallen6;\n\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _context17.prev = 0;\n                codeChallenge = null;\n                codeChallengeMethod = null;\n\n                if (!(this.flowType === 'pkce')) {\n                  _context17.next = 11;\n                  break;\n                }\n\n                ;\n                _context17.next = 7;\n                return getCodeChallengeAndMethod(this.storage, this.storageKey);\n\n              case 7:\n                _yield$getCodeChallen5 = _context17.sent;\n                _yield$getCodeChallen6 = _slicedToArray(_yield$getCodeChallen5, 2);\n                codeChallenge = _yield$getCodeChallen6[0];\n                codeChallengeMethod = _yield$getCodeChallen6[1];\n\n              case 11:\n                _context17.next = 13;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/sso\"), {\n                  body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n                    provider_id: params.providerId\n                  } : null), 'domain' in params ? {\n                    domain: params.domain\n                  } : null), {\n                    redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n                  }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n                    gotrue_meta_security: {\n                      captcha_token: params.options.captchaToken\n                    }\n                  } : null), {\n                    skip_http_redirect: true,\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                  }),\n                  headers: this.headers,\n                  xform: _ssoResponse\n                });\n\n              case 13:\n                return _context17.abrupt(\"return\", _context17.sent);\n\n              case 16:\n                _context17.prev = 16;\n                _context17.t0 = _context17[\"catch\"](0);\n\n                if (!isAuthError(_context17.t0)) {\n                  _context17.next = 20;\n                  break;\n                }\n\n                return _context17.abrupt(\"return\", {\n                  data: null,\n                  error: _context17.t0\n                });\n\n              case 20:\n                throw _context17.t0;\n\n              case 21:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[0, 16]]);\n      }));\n\n      function signInWithSSO(_x14) {\n        return _signInWithSSO.apply(this, arguments);\n      }\n\n      return signInWithSSO;\n    }()\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n\n  }, {\n    key: \"reauthenticate\",\n    value: function () {\n      var _reauthenticate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        var _this5 = this;\n\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.initializePromise;\n\n              case 2:\n                _context19.next = 4;\n                return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n                  return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n                    while (1) {\n                      switch (_context18.prev = _context18.next) {\n                        case 0:\n                          _context18.next = 2;\n                          return _this5._reauthenticate();\n\n                        case 2:\n                          return _context18.abrupt(\"return\", _context18.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context18.stop();\n                      }\n                    }\n                  }, _callee18);\n                })));\n\n              case 4:\n                return _context19.abrupt(\"return\", _context19.sent);\n\n              case 5:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function reauthenticate() {\n        return _reauthenticate2.apply(this, arguments);\n      }\n\n      return reauthenticate;\n    }()\n  }, {\n    key: \"_reauthenticate\",\n    value: function () {\n      var _reauthenticate3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n        var _this6 = this;\n\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.prev = 0;\n                _context21.next = 3;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(result) {\n                    var session, sessionError, _yield$_request5, error;\n\n                    return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n                      while (1) {\n                        switch (_context20.prev = _context20.next) {\n                          case 0:\n                            session = result.data.session, sessionError = result.error;\n\n                            if (!sessionError) {\n                              _context20.next = 3;\n                              break;\n                            }\n\n                            throw sessionError;\n\n                          case 3:\n                            if (session) {\n                              _context20.next = 5;\n                              break;\n                            }\n\n                            throw new AuthSessionMissingError();\n\n                          case 5:\n                            _context20.next = 7;\n                            return _request(_this6.fetch, 'GET', \"\".concat(_this6.url, \"/reauthenticate\"), {\n                              headers: _this6.headers,\n                              jwt: session.access_token\n                            });\n\n                          case 7:\n                            _yield$_request5 = _context20.sent;\n                            error = _yield$_request5.error;\n                            return _context20.abrupt(\"return\", {\n                              data: {\n                                user: null,\n                                session: null\n                              },\n                              error: error\n                            });\n\n                          case 10:\n                          case \"end\":\n                            return _context20.stop();\n                        }\n                      }\n                    }, _callee20);\n                  }));\n\n                  return function (_x15) {\n                    return _ref7.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                return _context21.abrupt(\"return\", _context21.sent);\n\n              case 6:\n                _context21.prev = 6;\n                _context21.t0 = _context21[\"catch\"](0);\n\n                if (!isAuthError(_context21.t0)) {\n                  _context21.next = 10;\n                  break;\n                }\n\n                return _context21.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: _context21.t0\n                });\n\n              case 10:\n                throw _context21.t0;\n\n              case 11:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this, [[0, 6]]);\n      }));\n\n      function _reauthenticate() {\n        return _reauthenticate3.apply(this, arguments);\n      }\n\n      return _reauthenticate;\n    }()\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n\n  }, {\n    key: \"resend\",\n    value: function () {\n      var _resend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(credentials) {\n        var endpoint, email, type, options, _yield$_request6, error, phone, _type, _options4, _yield$_request7, data, _error2;\n\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.prev = 0;\n                endpoint = \"\".concat(this.url, \"/resend\");\n\n                if (!('email' in credentials)) {\n                  _context22.next = 11;\n                  break;\n                }\n\n                email = credentials.email, type = credentials.type, options = credentials.options;\n                _context22.next = 6;\n                return _request(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    email: email,\n                    type: type,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                });\n\n              case 6:\n                _yield$_request6 = _context22.sent;\n                error = _yield$_request6.error;\n                return _context22.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                });\n\n              case 11:\n                if (!('phone' in credentials)) {\n                  _context22.next = 19;\n                  break;\n                }\n\n                phone = credentials.phone, _type = credentials.type, _options4 = credentials.options;\n                _context22.next = 15;\n                return _request(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    phone: phone,\n                    type: _type,\n                    gotrue_meta_security: {\n                      captcha_token: _options4 === null || _options4 === void 0 ? void 0 : _options4.captchaToken\n                    }\n                  }\n                });\n\n              case 15:\n                _yield$_request7 = _context22.sent;\n                data = _yield$_request7.data;\n                _error2 = _yield$_request7.error;\n                return _context22.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null,\n                    messageId: data === null || data === void 0 ? void 0 : data.message_id\n                  },\n                  error: _error2\n                });\n\n              case 19:\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n\n              case 22:\n                _context22.prev = 22;\n                _context22.t0 = _context22[\"catch\"](0);\n\n                if (!isAuthError(_context22.t0)) {\n                  _context22.next = 26;\n                  break;\n                }\n\n                return _context22.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: _context22.t0\n                });\n\n              case 26:\n                throw _context22.t0;\n\n              case 27:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[0, 22]]);\n      }));\n\n      function resend(_x16) {\n        return _resend.apply(this, arguments);\n      }\n\n      return resend;\n    }()\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */\n\n  }, {\n    key: \"getSession\",\n    value: function () {\n      var _getSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25() {\n        var _this7 = this;\n\n        var result;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.next = 2;\n                return this.initializePromise;\n\n              case 2:\n                _context25.next = 4;\n                return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n                  return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n                    while (1) {\n                      switch (_context24.prev = _context24.next) {\n                        case 0:\n                          return _context24.abrupt(\"return\", _this7._useSession( /*#__PURE__*/function () {\n                            var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(result) {\n                              return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n                                while (1) {\n                                  switch (_context23.prev = _context23.next) {\n                                    case 0:\n                                      return _context23.abrupt(\"return\", result);\n\n                                    case 1:\n                                    case \"end\":\n                                      return _context23.stop();\n                                  }\n                                }\n                              }, _callee23);\n                            }));\n\n                            return function (_x17) {\n                              return _ref9.apply(this, arguments);\n                            };\n                          }()));\n\n                        case 1:\n                        case \"end\":\n                          return _context24.stop();\n                      }\n                    }\n                  }, _callee24);\n                })));\n\n              case 4:\n                result = _context25.sent;\n                return _context25.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function getSession() {\n        return _getSession.apply(this, arguments);\n      }\n\n      return getSession;\n    }()\n    /**\n     * Acquires a global lock based on the storage key.\n     */\n\n  }, {\n    key: \"_acquireLock\",\n    value: function () {\n      var _acquireLock2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(acquireTimeout, fn) {\n        var _this8 = this;\n\n        var last, result;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                this._debug('#_acquireLock', 'begin', acquireTimeout);\n\n                _context30.prev = 1;\n\n                if (!this.lockAcquired) {\n                  _context30.next = 7;\n                  break;\n                }\n\n                last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n                result = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n                  return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n                    while (1) {\n                      switch (_context26.prev = _context26.next) {\n                        case 0:\n                          _context26.next = 2;\n                          return last;\n\n                        case 2:\n                          _context26.next = 4;\n                          return fn();\n\n                        case 4:\n                          return _context26.abrupt(\"return\", _context26.sent);\n\n                        case 5:\n                        case \"end\":\n                          return _context26.stop();\n                      }\n                    }\n                  }, _callee26);\n                }))();\n                this.pendingInLock.push(_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {\n                  return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n                    while (1) {\n                      switch (_context27.prev = _context27.next) {\n                        case 0:\n                          _context27.prev = 0;\n                          _context27.next = 3;\n                          return result;\n\n                        case 3:\n                          _context27.next = 7;\n                          break;\n\n                        case 5:\n                          _context27.prev = 5;\n                          _context27.t0 = _context27[\"catch\"](0);\n\n                        case 7:\n                        case \"end\":\n                          return _context27.stop();\n                      }\n                    }\n                  }, _callee27, null, [[0, 5]]);\n                }))());\n                return _context30.abrupt(\"return\", result);\n\n              case 7:\n                _context30.next = 9;\n                return this.lock(\"lock:\".concat(this.storageKey), acquireTimeout, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {\n                  var _result, waitOn;\n\n                  return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n                    while (1) {\n                      switch (_context29.prev = _context29.next) {\n                        case 0:\n                          _this8._debug('#_acquireLock', 'lock acquired for storage key', _this8.storageKey);\n\n                          _context29.prev = 1;\n                          _this8.lockAcquired = true;\n                          _result = fn();\n\n                          _this8.pendingInLock.push(_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {\n                            return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n                              while (1) {\n                                switch (_context28.prev = _context28.next) {\n                                  case 0:\n                                    _context28.prev = 0;\n                                    _context28.next = 3;\n                                    return _result;\n\n                                  case 3:\n                                    _context28.next = 7;\n                                    break;\n\n                                  case 5:\n                                    _context28.prev = 5;\n                                    _context28.t0 = _context28[\"catch\"](0);\n\n                                  case 7:\n                                  case \"end\":\n                                    return _context28.stop();\n                                }\n                              }\n                            }, _callee28, null, [[0, 5]]);\n                          }))());\n\n                          _context29.next = 7;\n                          return _result;\n\n                        case 7:\n                          if (!_this8.pendingInLock.length) {\n                            _context29.next = 14;\n                            break;\n                          }\n\n                          waitOn = _toConsumableArray(_this8.pendingInLock);\n                          _context29.next = 11;\n                          return Promise.all(waitOn);\n\n                        case 11:\n                          _this8.pendingInLock.splice(0, waitOn.length);\n\n                          _context29.next = 7;\n                          break;\n\n                        case 14:\n                          _context29.next = 16;\n                          return _result;\n\n                        case 16:\n                          return _context29.abrupt(\"return\", _context29.sent);\n\n                        case 17:\n                          _context29.prev = 17;\n\n                          _this8._debug('#_acquireLock', 'lock released for storage key', _this8.storageKey);\n\n                          _this8.lockAcquired = false;\n                          return _context29.finish(17);\n\n                        case 21:\n                        case \"end\":\n                          return _context29.stop();\n                      }\n                    }\n                  }, _callee29, null, [[1,, 17, 21]]);\n                })));\n\n              case 9:\n                return _context30.abrupt(\"return\", _context30.sent);\n\n              case 10:\n                _context30.prev = 10;\n\n                this._debug('#_acquireLock', 'end');\n\n                return _context30.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this, [[1,, 10, 13]]);\n      }));\n\n      function _acquireLock(_x18, _x19) {\n        return _acquireLock2.apply(this, arguments);\n      }\n\n      return _acquireLock;\n    }()\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */\n\n  }, {\n    key: \"_useSession\",\n    value: function () {\n      var _useSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(fn) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                this._debug('#_useSession', 'begin');\n\n                _context31.prev = 1;\n                _context31.next = 4;\n                return this.__loadSession();\n\n              case 4:\n                result = _context31.sent;\n                _context31.next = 7;\n                return fn(result);\n\n              case 7:\n                return _context31.abrupt(\"return\", _context31.sent);\n\n              case 8:\n                _context31.prev = 8;\n\n                this._debug('#_useSession', 'end');\n\n                return _context31.finish(8);\n\n              case 11:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this, [[1,, 8, 11]]);\n      }));\n\n      function _useSession(_x20) {\n        return _useSession2.apply(this, arguments);\n      }\n\n      return _useSession;\n    }()\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */\n\n  }, {\n    key: \"__loadSession\",\n    value: function () {\n      var _loadSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {\n        var _this9 = this;\n\n        var currentSession, maybeSession, hasExpired, suppressWarning, proxySession, _yield$this$_callRefr, session, error;\n\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                this._debug('#__loadSession()', 'begin');\n\n                if (!this.lockAcquired) {\n                  this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n                }\n\n                _context32.prev = 2;\n                currentSession = null;\n                _context32.next = 6;\n                return getItemAsync(this.storage, this.storageKey);\n\n              case 6:\n                maybeSession = _context32.sent;\n\n                this._debug('#getSession()', 'session from storage', maybeSession);\n\n                if (!(maybeSession !== null)) {\n                  _context32.next = 16;\n                  break;\n                }\n\n                if (!this._isValidSession(maybeSession)) {\n                  _context32.next = 13;\n                  break;\n                }\n\n                currentSession = maybeSession;\n                _context32.next = 16;\n                break;\n\n              case 13:\n                this._debug('#getSession()', 'session from storage is not valid');\n\n                _context32.next = 16;\n                return this._removeSession();\n\n              case 16:\n                if (currentSession) {\n                  _context32.next = 18;\n                  break;\n                }\n\n                return _context32.abrupt(\"return\", {\n                  data: {\n                    session: null\n                  },\n                  error: null\n                });\n\n              case 18:\n                hasExpired = currentSession.expires_at ? currentSession.expires_at <= Date.now() / 1000 : false;\n\n                this._debug('#__loadSession()', \"session has\".concat(hasExpired ? '' : ' not', \" expired\"), 'expires_at', currentSession.expires_at);\n\n                if (hasExpired) {\n                  _context32.next = 23;\n                  break;\n                }\n\n                if (this.storage.isServer) {\n                  suppressWarning = this.suppressGetSessionWarning;\n                  proxySession = new Proxy(currentSession, {\n                    get: function get(target, prop, receiver) {\n                      if (!suppressWarning && prop === 'user') {\n                        // only show warning when the user object is being accessed from the server\n                        console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                        suppressWarning = true; // keeps this proxy instance from logging additional warnings\n\n                        _this9.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                      }\n\n                      return Reflect.get(target, prop, receiver);\n                    }\n                  });\n                  currentSession = proxySession;\n                }\n\n                return _context32.abrupt(\"return\", {\n                  data: {\n                    session: currentSession\n                  },\n                  error: null\n                });\n\n              case 23:\n                _context32.next = 25;\n                return this._callRefreshToken(currentSession.refresh_token);\n\n              case 25:\n                _yield$this$_callRefr = _context32.sent;\n                session = _yield$this$_callRefr.session;\n                error = _yield$this$_callRefr.error;\n\n                if (!error) {\n                  _context32.next = 30;\n                  break;\n                }\n\n                return _context32.abrupt(\"return\", {\n                  data: {\n                    session: null\n                  },\n                  error: error\n                });\n\n              case 30:\n                return _context32.abrupt(\"return\", {\n                  data: {\n                    session: session\n                  },\n                  error: null\n                });\n\n              case 31:\n                _context32.prev = 31;\n\n                this._debug('#__loadSession()', 'end');\n\n                return _context32.finish(31);\n\n              case 34:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this, [[2,, 31, 34]]);\n      }));\n\n      function __loadSession() {\n        return _loadSession.apply(this, arguments);\n      }\n\n      return __loadSession;\n    }()\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */\n\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(jwt) {\n        var _this10 = this;\n\n        var result;\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                if (!jwt) {\n                  _context34.next = 4;\n                  break;\n                }\n\n                _context34.next = 3;\n                return this._getUser(jwt);\n\n              case 3:\n                return _context34.abrupt(\"return\", _context34.sent);\n\n              case 4:\n                _context34.next = 6;\n                return this.initializePromise;\n\n              case 6:\n                _context34.next = 8;\n                return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33() {\n                  return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n                    while (1) {\n                      switch (_context33.prev = _context33.next) {\n                        case 0:\n                          _context33.next = 2;\n                          return _this10._getUser();\n\n                        case 2:\n                          return _context33.abrupt(\"return\", _context33.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context33.stop();\n                      }\n                    }\n                  }, _callee33);\n                })));\n\n              case 8:\n                result = _context34.sent;\n                return _context34.abrupt(\"return\", result);\n\n              case 10:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this);\n      }));\n\n      function getUser(_x21) {\n        return _getUser2.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n  }, {\n    key: \"_getUser\",\n    value: function () {\n      var _getUser3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(jwt) {\n        var _this11 = this;\n\n        return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                _context36.prev = 0;\n\n                if (!jwt) {\n                  _context36.next = 5;\n                  break;\n                }\n\n                _context36.next = 4;\n                return _request(this.fetch, 'GET', \"\".concat(this.url, \"/user\"), {\n                  headers: this.headers,\n                  jwt: jwt,\n                  xform: _userResponse\n                });\n\n              case 4:\n                return _context36.abrupt(\"return\", _context36.sent);\n\n              case 5:\n                _context36.next = 7;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(result) {\n                    var _a, _b, _c, data, error;\n\n                    return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n                      while (1) {\n                        switch (_context35.prev = _context35.next) {\n                          case 0:\n                            data = result.data, error = result.error;\n\n                            if (!error) {\n                              _context35.next = 3;\n                              break;\n                            }\n\n                            throw error;\n\n                          case 3:\n                            if (!(!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !_this11.hasCustomAuthorizationHeader)) {\n                              _context35.next = 5;\n                              break;\n                            }\n\n                            return _context35.abrupt(\"return\", {\n                              data: {\n                                user: null\n                              },\n                              error: new AuthSessionMissingError()\n                            });\n\n                          case 5:\n                            _context35.next = 7;\n                            return _request(_this11.fetch, 'GET', \"\".concat(_this11.url, \"/user\"), {\n                              headers: _this11.headers,\n                              jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                              xform: _userResponse\n                            });\n\n                          case 7:\n                            return _context35.abrupt(\"return\", _context35.sent);\n\n                          case 8:\n                          case \"end\":\n                            return _context35.stop();\n                        }\n                      }\n                    }, _callee35);\n                  }));\n\n                  return function (_x23) {\n                    return _ref15.apply(this, arguments);\n                  };\n                }());\n\n              case 7:\n                return _context36.abrupt(\"return\", _context36.sent);\n\n              case 10:\n                _context36.prev = 10;\n                _context36.t0 = _context36[\"catch\"](0);\n\n                if (!isAuthError(_context36.t0)) {\n                  _context36.next = 14;\n                  break;\n                }\n\n                return _context36.abrupt(\"return\", {\n                  data: {\n                    user: null\n                  },\n                  error: _context36.t0\n                });\n\n              case 14:\n                throw _context36.t0;\n\n              case 15:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this, [[0, 10]]);\n      }));\n\n      function _getUser(_x22) {\n        return _getUser3.apply(this, arguments);\n      }\n\n      return _getUser;\n    }()\n    /**\n     * Updates user data for a logged in user.\n     */\n\n  }, {\n    key: \"updateUser\",\n    value: function () {\n      var _updateUser2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(attributes) {\n        var _this12 = this;\n\n        var options,\n            _args38 = arguments;\n        return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                options = _args38.length > 1 && _args38[1] !== undefined ? _args38[1] : {};\n                _context38.next = 3;\n                return this.initializePromise;\n\n              case 3:\n                _context38.next = 5;\n                return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37() {\n                  return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n                    while (1) {\n                      switch (_context37.prev = _context37.next) {\n                        case 0:\n                          _context37.next = 2;\n                          return _this12._updateUser(attributes, options);\n\n                        case 2:\n                          return _context37.abrupt(\"return\", _context37.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context37.stop();\n                      }\n                    }\n                  }, _callee37);\n                })));\n\n              case 5:\n                return _context38.abrupt(\"return\", _context38.sent);\n\n              case 6:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n\n      function updateUser(_x24) {\n        return _updateUser2.apply(this, arguments);\n      }\n\n      return updateUser;\n    }()\n  }, {\n    key: \"_updateUser\",\n    value: function () {\n      var _updateUser3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40(attributes) {\n        var _this13 = this;\n\n        var options,\n            _args40 = arguments;\n        return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                options = _args40.length > 1 && _args40[1] !== undefined ? _args40[1] : {};\n                _context40.prev = 1;\n                _context40.next = 4;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(result) {\n                    var sessionData, sessionError, session, codeChallenge, codeChallengeMethod, _yield$getCodeChallen7, _yield$getCodeChallen8, _yield$_request8, data, userError;\n\n                    return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n                      while (1) {\n                        switch (_context39.prev = _context39.next) {\n                          case 0:\n                            sessionData = result.data, sessionError = result.error;\n\n                            if (!sessionError) {\n                              _context39.next = 3;\n                              break;\n                            }\n\n                            throw sessionError;\n\n                          case 3:\n                            if (sessionData.session) {\n                              _context39.next = 5;\n                              break;\n                            }\n\n                            throw new AuthSessionMissingError();\n\n                          case 5:\n                            session = sessionData.session;\n                            codeChallenge = null;\n                            codeChallengeMethod = null;\n\n                            if (!(_this13.flowType === 'pkce' && attributes.email != null)) {\n                              _context39.next = 16;\n                              break;\n                            }\n\n                            ;\n                            _context39.next = 12;\n                            return getCodeChallengeAndMethod(_this13.storage, _this13.storageKey);\n\n                          case 12:\n                            _yield$getCodeChallen7 = _context39.sent;\n                            _yield$getCodeChallen8 = _slicedToArray(_yield$getCodeChallen7, 2);\n                            codeChallenge = _yield$getCodeChallen8[0];\n                            codeChallengeMethod = _yield$getCodeChallen8[1];\n\n                          case 16:\n                            _context39.next = 18;\n                            return _request(_this13.fetch, 'PUT', \"\".concat(_this13.url, \"/user\"), {\n                              headers: _this13.headers,\n                              redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                              body: Object.assign(Object.assign({}, attributes), {\n                                code_challenge: codeChallenge,\n                                code_challenge_method: codeChallengeMethod\n                              }),\n                              jwt: session.access_token,\n                              xform: _userResponse\n                            });\n\n                          case 18:\n                            _yield$_request8 = _context39.sent;\n                            data = _yield$_request8.data;\n                            userError = _yield$_request8.error;\n\n                            if (!userError) {\n                              _context39.next = 23;\n                              break;\n                            }\n\n                            throw userError;\n\n                          case 23:\n                            session.user = data.user;\n                            _context39.next = 26;\n                            return _this13._saveSession(session);\n\n                          case 26:\n                            _context39.next = 28;\n                            return _this13._notifyAllSubscribers('USER_UPDATED', session);\n\n                          case 28:\n                            return _context39.abrupt(\"return\", {\n                              data: {\n                                user: session.user\n                              },\n                              error: null\n                            });\n\n                          case 29:\n                          case \"end\":\n                            return _context39.stop();\n                        }\n                      }\n                    }, _callee39);\n                  }));\n\n                  return function (_x26) {\n                    return _ref17.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n                return _context40.abrupt(\"return\", _context40.sent);\n\n              case 7:\n                _context40.prev = 7;\n                _context40.t0 = _context40[\"catch\"](1);\n\n                if (!isAuthError(_context40.t0)) {\n                  _context40.next = 11;\n                  break;\n                }\n\n                return _context40.abrupt(\"return\", {\n                  data: {\n                    user: null\n                  },\n                  error: _context40.t0\n                });\n\n              case 11:\n                throw _context40.t0;\n\n              case 12:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40, this, [[1, 7]]);\n      }));\n\n      function _updateUser(_x25) {\n        return _updateUser3.apply(this, arguments);\n      }\n\n      return _updateUser;\n    }()\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n\n  }, {\n    key: \"_decodeJWT\",\n    value: function _decodeJWT(jwt) {\n      return decodeJWTPayload(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n\n  }, {\n    key: \"setSession\",\n    value: function () {\n      var _setSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42(currentSession) {\n        var _this14 = this;\n\n        return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                _context42.next = 2;\n                return this.initializePromise;\n\n              case 2:\n                _context42.next = 4;\n                return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41() {\n                  return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n                    while (1) {\n                      switch (_context41.prev = _context41.next) {\n                        case 0:\n                          _context41.next = 2;\n                          return _this14._setSession(currentSession);\n\n                        case 2:\n                          return _context41.abrupt(\"return\", _context41.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context41.stop();\n                      }\n                    }\n                  }, _callee41);\n                })));\n\n              case 4:\n                return _context42.abrupt(\"return\", _context42.sent);\n\n              case 5:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42, this);\n      }));\n\n      function setSession(_x27) {\n        return _setSession2.apply(this, arguments);\n      }\n\n      return setSession;\n    }()\n  }, {\n    key: \"_setSession\",\n    value: function () {\n      var _setSession3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43(currentSession) {\n        var timeNow, expiresAt, hasExpired, session, payload, _yield$this$_callRefr2, refreshedSession, error, _yield$this$_getUser, data, _error3;\n\n        return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                _context43.prev = 0;\n\n                if (!(!currentSession.access_token || !currentSession.refresh_token)) {\n                  _context43.next = 3;\n                  break;\n                }\n\n                throw new AuthSessionMissingError();\n\n              case 3:\n                timeNow = Date.now() / 1000;\n                expiresAt = timeNow;\n                hasExpired = true;\n                session = null;\n                payload = decodeJWTPayload(currentSession.access_token);\n\n                if (payload.exp) {\n                  expiresAt = payload.exp;\n                  hasExpired = expiresAt <= timeNow;\n                }\n\n                if (!hasExpired) {\n                  _context43.next = 22;\n                  break;\n                }\n\n                _context43.next = 12;\n                return this._callRefreshToken(currentSession.refresh_token);\n\n              case 12:\n                _yield$this$_callRefr2 = _context43.sent;\n                refreshedSession = _yield$this$_callRefr2.session;\n                error = _yield$this$_callRefr2.error;\n\n                if (!error) {\n                  _context43.next = 17;\n                  break;\n                }\n\n                return _context43.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                });\n\n              case 17:\n                if (refreshedSession) {\n                  _context43.next = 19;\n                  break;\n                }\n\n                return _context43.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: null\n                });\n\n              case 19:\n                session = refreshedSession;\n                _context43.next = 34;\n                break;\n\n              case 22:\n                _context43.next = 24;\n                return this._getUser(currentSession.access_token);\n\n              case 24:\n                _yield$this$_getUser = _context43.sent;\n                data = _yield$this$_getUser.data;\n                _error3 = _yield$this$_getUser.error;\n\n                if (!_error3) {\n                  _context43.next = 29;\n                  break;\n                }\n\n                throw _error3;\n\n              case 29:\n                session = {\n                  access_token: currentSession.access_token,\n                  refresh_token: currentSession.refresh_token,\n                  user: data.user,\n                  token_type: 'bearer',\n                  expires_in: expiresAt - timeNow,\n                  expires_at: expiresAt\n                };\n                _context43.next = 32;\n                return this._saveSession(session);\n\n              case 32:\n                _context43.next = 34;\n                return this._notifyAllSubscribers('SIGNED_IN', session);\n\n              case 34:\n                return _context43.abrupt(\"return\", {\n                  data: {\n                    user: session.user,\n                    session: session\n                  },\n                  error: null\n                });\n\n              case 37:\n                _context43.prev = 37;\n                _context43.t0 = _context43[\"catch\"](0);\n\n                if (!isAuthError(_context43.t0)) {\n                  _context43.next = 41;\n                  break;\n                }\n\n                return _context43.abrupt(\"return\", {\n                  data: {\n                    session: null,\n                    user: null\n                  },\n                  error: _context43.t0\n                });\n\n              case 41:\n                throw _context43.t0;\n\n              case 42:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43, this, [[0, 37]]);\n      }));\n\n      function _setSession(_x28) {\n        return _setSession3.apply(this, arguments);\n      }\n\n      return _setSession;\n    }()\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n\n  }, {\n    key: \"refreshSession\",\n    value: function () {\n      var _refreshSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45(currentSession) {\n        var _this15 = this;\n\n        return _regeneratorRuntime().wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                _context45.next = 2;\n                return this.initializePromise;\n\n              case 2:\n                _context45.next = 4;\n                return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44() {\n                  return _regeneratorRuntime().wrap(function _callee44$(_context44) {\n                    while (1) {\n                      switch (_context44.prev = _context44.next) {\n                        case 0:\n                          _context44.next = 2;\n                          return _this15._refreshSession(currentSession);\n\n                        case 2:\n                          return _context44.abrupt(\"return\", _context44.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context44.stop();\n                      }\n                    }\n                  }, _callee44);\n                })));\n\n              case 4:\n                return _context45.abrupt(\"return\", _context45.sent);\n\n              case 5:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45, this);\n      }));\n\n      function refreshSession(_x29) {\n        return _refreshSession2.apply(this, arguments);\n      }\n\n      return refreshSession;\n    }()\n  }, {\n    key: \"_refreshSession\",\n    value: function () {\n      var _refreshSession3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee47(currentSession) {\n        var _this16 = this;\n\n        return _regeneratorRuntime().wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                _context47.prev = 0;\n                _context47.next = 3;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee46(result) {\n                    var _a, data, _error4, _yield$_this16$_callR, session, error;\n\n                    return _regeneratorRuntime().wrap(function _callee46$(_context46) {\n                      while (1) {\n                        switch (_context46.prev = _context46.next) {\n                          case 0:\n                            if (currentSession) {\n                              _context46.next = 5;\n                              break;\n                            }\n\n                            data = result.data, _error4 = result.error;\n\n                            if (!_error4) {\n                              _context46.next = 4;\n                              break;\n                            }\n\n                            throw _error4;\n\n                          case 4:\n                            currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n\n                          case 5:\n                            if (currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token) {\n                              _context46.next = 7;\n                              break;\n                            }\n\n                            throw new AuthSessionMissingError();\n\n                          case 7:\n                            _context46.next = 9;\n                            return _this16._callRefreshToken(currentSession.refresh_token);\n\n                          case 9:\n                            _yield$_this16$_callR = _context46.sent;\n                            session = _yield$_this16$_callR.session;\n                            error = _yield$_this16$_callR.error;\n\n                            if (!error) {\n                              _context46.next = 14;\n                              break;\n                            }\n\n                            return _context46.abrupt(\"return\", {\n                              data: {\n                                user: null,\n                                session: null\n                              },\n                              error: error\n                            });\n\n                          case 14:\n                            if (session) {\n                              _context46.next = 16;\n                              break;\n                            }\n\n                            return _context46.abrupt(\"return\", {\n                              data: {\n                                user: null,\n                                session: null\n                              },\n                              error: null\n                            });\n\n                          case 16:\n                            return _context46.abrupt(\"return\", {\n                              data: {\n                                user: session.user,\n                                session: session\n                              },\n                              error: null\n                            });\n\n                          case 17:\n                          case \"end\":\n                            return _context46.stop();\n                        }\n                      }\n                    }, _callee46);\n                  }));\n\n                  return function (_x31) {\n                    return _ref20.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                return _context47.abrupt(\"return\", _context47.sent);\n\n              case 6:\n                _context47.prev = 6;\n                _context47.t0 = _context47[\"catch\"](0);\n\n                if (!isAuthError(_context47.t0)) {\n                  _context47.next = 10;\n                  break;\n                }\n\n                return _context47.abrupt(\"return\", {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: _context47.t0\n                });\n\n              case 10:\n                throw _context47.t0;\n\n              case 11:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47, this, [[0, 6]]);\n      }));\n\n      function _refreshSession(_x30) {\n        return _refreshSession3.apply(this, arguments);\n      }\n\n      return _refreshSession;\n    }()\n    /**\n     * Gets the session data from a URL string\n     */\n\n  }, {\n    key: \"_getSessionFromURL\",\n    value: function () {\n      var _getSessionFromURL2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee48(isPKCEFlow) {\n        var params, _yield$this$_exchange, _data, _error5, url, provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type, timeNow, expiresIn, expiresAt, actuallyExpiresIn, issuedAt, _yield$this$_getUser2, data, error, session;\n\n        return _regeneratorRuntime().wrap(function _callee48$(_context48) {\n          while (1) {\n            switch (_context48.prev = _context48.next) {\n              case 0:\n                _context48.prev = 0;\n\n                if (isBrowser()) {\n                  _context48.next = 3;\n                  break;\n                }\n\n                throw new AuthImplicitGrantRedirectError('No browser detected.');\n\n              case 3:\n                if (!(this.flowType === 'implicit' && !this._isImplicitGrantFlow())) {\n                  _context48.next = 7;\n                  break;\n                }\n\n                throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n\n              case 7:\n                if (!(this.flowType == 'pkce' && !isPKCEFlow)) {\n                  _context48.next = 9;\n                  break;\n                }\n\n                throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n\n              case 9:\n                params = parseParametersFromURL(window.location.href);\n\n                if (!isPKCEFlow) {\n                  _context48.next = 24;\n                  break;\n                }\n\n                if (params.code) {\n                  _context48.next = 13;\n                  break;\n                }\n\n                throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n\n              case 13:\n                _context48.next = 15;\n                return this._exchangeCodeForSession(params.code);\n\n              case 15:\n                _yield$this$_exchange = _context48.sent;\n                _data = _yield$this$_exchange.data;\n                _error5 = _yield$this$_exchange.error;\n\n                if (!_error5) {\n                  _context48.next = 20;\n                  break;\n                }\n\n                throw _error5;\n\n              case 20:\n                url = new URL(window.location.href);\n                url.searchParams.delete('code');\n                window.history.replaceState(window.history.state, '', url.toString());\n                return _context48.abrupt(\"return\", {\n                  data: {\n                    session: _data.session,\n                    redirectType: null\n                  },\n                  error: null\n                });\n\n              case 24:\n                if (!(params.error || params.error_description || params.error_code)) {\n                  _context48.next = 26;\n                  break;\n                }\n\n                throw new AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                  error: params.error || 'unspecified_error',\n                  code: params.error_code || 'unspecified_code'\n                });\n\n              case 26:\n                provider_token = params.provider_token, provider_refresh_token = params.provider_refresh_token, access_token = params.access_token, refresh_token = params.refresh_token, expires_in = params.expires_in, expires_at = params.expires_at, token_type = params.token_type;\n\n                if (!(!access_token || !expires_in || !refresh_token || !token_type)) {\n                  _context48.next = 29;\n                  break;\n                }\n\n                throw new AuthImplicitGrantRedirectError('No session defined in URL');\n\n              case 29:\n                timeNow = Math.round(Date.now() / 1000);\n                expiresIn = parseInt(expires_in);\n                expiresAt = timeNow + expiresIn;\n\n                if (expires_at) {\n                  expiresAt = parseInt(expires_at);\n                }\n\n                actuallyExpiresIn = expiresAt - timeNow;\n\n                if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION) {\n                  console.warn(\"@supabase/gotrue-js: Session as retrieved from URL expires in \".concat(actuallyExpiresIn, \"s, should have been closer to \").concat(expiresIn, \"s\"));\n                }\n\n                issuedAt = expiresAt - expiresIn;\n\n                if (timeNow - issuedAt >= 120) {\n                  console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n                } else if (timeNow - issuedAt < 0) {\n                  console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clok for skew', issuedAt, expiresAt, timeNow);\n                }\n\n                _context48.next = 39;\n                return this._getUser(access_token);\n\n              case 39:\n                _yield$this$_getUser2 = _context48.sent;\n                data = _yield$this$_getUser2.data;\n                error = _yield$this$_getUser2.error;\n\n                if (!error) {\n                  _context48.next = 44;\n                  break;\n                }\n\n                throw error;\n\n              case 44:\n                session = {\n                  provider_token: provider_token,\n                  provider_refresh_token: provider_refresh_token,\n                  access_token: access_token,\n                  expires_in: expiresIn,\n                  expires_at: expiresAt,\n                  refresh_token: refresh_token,\n                  token_type: token_type,\n                  user: data.user\n                }; // Remove tokens from URL\n\n                window.location.hash = '';\n\n                this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n\n                return _context48.abrupt(\"return\", {\n                  data: {\n                    session: session,\n                    redirectType: params.type\n                  },\n                  error: null\n                });\n\n              case 50:\n                _context48.prev = 50;\n                _context48.t0 = _context48[\"catch\"](0);\n\n                if (!isAuthError(_context48.t0)) {\n                  _context48.next = 54;\n                  break;\n                }\n\n                return _context48.abrupt(\"return\", {\n                  data: {\n                    session: null,\n                    redirectType: null\n                  },\n                  error: _context48.t0\n                });\n\n              case 54:\n                throw _context48.t0;\n\n              case 55:\n              case \"end\":\n                return _context48.stop();\n            }\n          }\n        }, _callee48, this, [[0, 50]]);\n      }));\n\n      function _getSessionFromURL(_x32) {\n        return _getSessionFromURL2.apply(this, arguments);\n      }\n\n      return _getSessionFromURL;\n    }()\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n\n  }, {\n    key: \"_isImplicitGrantFlow\",\n    value: function _isImplicitGrantFlow() {\n      var params = parseParametersFromURL(window.location.href);\n      return !!(isBrowser() && (params.access_token || params.error_description));\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n\n  }, {\n    key: \"_isPKCEFlow\",\n    value: function () {\n      var _isPKCEFlow2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49() {\n        var params, currentStorageContent;\n        return _regeneratorRuntime().wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                params = parseParametersFromURL(window.location.href);\n                _context49.next = 3;\n                return getItemAsync(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n\n              case 3:\n                currentStorageContent = _context49.sent;\n                return _context49.abrupt(\"return\", !!(params.code && currentStorageContent));\n\n              case 5:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49, this);\n      }));\n\n      function _isPKCEFlow() {\n        return _isPKCEFlow2.apply(this, arguments);\n      }\n\n      return _isPKCEFlow;\n    }()\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */\n\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51() {\n        var _this17 = this;\n\n        var options,\n            _args51 = arguments;\n        return _regeneratorRuntime().wrap(function _callee51$(_context51) {\n          while (1) {\n            switch (_context51.prev = _context51.next) {\n              case 0:\n                options = _args51.length > 0 && _args51[0] !== undefined ? _args51[0] : {\n                  scope: 'global'\n                };\n                _context51.next = 3;\n                return this.initializePromise;\n\n              case 3:\n                _context51.next = 5;\n                return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50() {\n                  return _regeneratorRuntime().wrap(function _callee50$(_context50) {\n                    while (1) {\n                      switch (_context50.prev = _context50.next) {\n                        case 0:\n                          _context50.next = 2;\n                          return _this17._signOut(options);\n\n                        case 2:\n                          return _context50.abrupt(\"return\", _context50.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context50.stop();\n                      }\n                    }\n                  }, _callee50);\n                })));\n\n              case 5:\n                return _context51.abrupt(\"return\", _context51.sent);\n\n              case 6:\n              case \"end\":\n                return _context51.stop();\n            }\n          }\n        }, _callee51, this);\n      }));\n\n      function signOut() {\n        return _signOut2.apply(this, arguments);\n      }\n\n      return signOut;\n    }()\n  }, {\n    key: \"_signOut\",\n    value: function () {\n      var _signOut3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53() {\n        var _this18 = this;\n\n        var _ref22,\n            scope,\n            _args53 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee53$(_context53) {\n          while (1) {\n            switch (_context53.prev = _context53.next) {\n              case 0:\n                _ref22 = _args53.length > 0 && _args53[0] !== undefined ? _args53[0] : {\n                  scope: 'global'\n                }, scope = _ref22.scope;\n                _context53.next = 3;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52(result) {\n                    var _a, data, sessionError, accessToken, _yield$_this18$admin$, error;\n\n                    return _regeneratorRuntime().wrap(function _callee52$(_context52) {\n                      while (1) {\n                        switch (_context52.prev = _context52.next) {\n                          case 0:\n                            data = result.data, sessionError = result.error;\n\n                            if (!sessionError) {\n                              _context52.next = 3;\n                              break;\n                            }\n\n                            return _context52.abrupt(\"return\", {\n                              error: sessionError\n                            });\n\n                          case 3:\n                            accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n\n                            if (!accessToken) {\n                              _context52.next = 12;\n                              break;\n                            }\n\n                            _context52.next = 7;\n                            return _this18.admin.signOut(accessToken, scope);\n\n                          case 7:\n                            _yield$_this18$admin$ = _context52.sent;\n                            error = _yield$_this18$admin$.error;\n\n                            if (!error) {\n                              _context52.next = 12;\n                              break;\n                            }\n\n                            if (isAuthApiError(error) && (error.status === 404 || error.status === 401 || error.status === 403)) {\n                              _context52.next = 12;\n                              break;\n                            }\n\n                            return _context52.abrupt(\"return\", {\n                              error: error\n                            });\n\n                          case 12:\n                            if (!(scope !== 'others')) {\n                              _context52.next = 19;\n                              break;\n                            }\n\n                            _context52.next = 15;\n                            return _this18._removeSession();\n\n                          case 15:\n                            _context52.next = 17;\n                            return removeItemAsync(_this18.storage, \"\".concat(_this18.storageKey, \"-code-verifier\"));\n\n                          case 17:\n                            _context52.next = 19;\n                            return _this18._notifyAllSubscribers('SIGNED_OUT', null);\n\n                          case 19:\n                            return _context52.abrupt(\"return\", {\n                              error: null\n                            });\n\n                          case 20:\n                          case \"end\":\n                            return _context52.stop();\n                        }\n                      }\n                    }, _callee52);\n                  }));\n\n                  return function (_x33) {\n                    return _ref23.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                return _context53.abrupt(\"return\", _context53.sent);\n\n              case 4:\n              case \"end\":\n                return _context53.stop();\n            }\n          }\n        }, _callee53, this);\n      }));\n\n      function _signOut() {\n        return _signOut3.apply(this, arguments);\n      }\n\n      return _signOut;\n    }()\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n\n  }, {\n    key: \"onAuthStateChange\",\n    value: function onAuthStateChange(callback) {\n      var _this19 = this;\n\n      var id = uuid();\n      var subscription = {\n        id: id,\n        callback: callback,\n        unsubscribe: function unsubscribe() {\n          _this19._debug('#unsubscribe()', 'state change callback with id removed', id);\n\n          _this19.stateChangeEmitters.delete(id);\n        }\n      };\n\n      this._debug('#onAuthStateChange()', 'registered callback with id', id);\n\n      this.stateChangeEmitters.set(id, subscription);\n\n      _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55() {\n        return _regeneratorRuntime().wrap(function _callee55$(_context55) {\n          while (1) {\n            switch (_context55.prev = _context55.next) {\n              case 0:\n                _context55.next = 2;\n                return _this19.initializePromise;\n\n              case 2:\n                _context55.next = 4;\n                return _this19._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54() {\n                  return _regeneratorRuntime().wrap(function _callee54$(_context54) {\n                    while (1) {\n                      switch (_context54.prev = _context54.next) {\n                        case 0:\n                          _this19._emitInitialSession(id);\n\n                        case 1:\n                        case \"end\":\n                          return _context54.stop();\n                      }\n                    }\n                  }, _callee54);\n                })));\n\n              case 4:\n              case \"end\":\n                return _context55.stop();\n            }\n          }\n        }, _callee55);\n      }))();\n\n      return {\n        data: {\n          subscription: subscription\n        }\n      };\n    }\n  }, {\n    key: \"_emitInitialSession\",\n    value: function () {\n      var _emitInitialSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee57(id) {\n        var _this20 = this;\n\n        return _regeneratorRuntime().wrap(function _callee57$(_context57) {\n          while (1) {\n            switch (_context57.prev = _context57.next) {\n              case 0:\n                _context57.next = 2;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee56(result) {\n                    var _a, _b, session, error;\n\n                    return _regeneratorRuntime().wrap(function _callee56$(_context56) {\n                      while (1) {\n                        switch (_context56.prev = _context56.next) {\n                          case 0:\n                            _context56.prev = 0;\n                            session = result.data.session, error = result.error;\n\n                            if (!error) {\n                              _context56.next = 4;\n                              break;\n                            }\n\n                            throw error;\n\n                          case 4:\n                            _context56.next = 6;\n                            return (_a = _this20.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n\n                          case 6:\n                            _this20._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n\n                            _context56.next = 15;\n                            break;\n\n                          case 9:\n                            _context56.prev = 9;\n                            _context56.t0 = _context56[\"catch\"](0);\n                            _context56.next = 13;\n                            return (_b = _this20.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n\n                          case 13:\n                            _this20._debug('INITIAL_SESSION', 'callback id', id, 'error', _context56.t0);\n\n                            console.error(_context56.t0);\n\n                          case 15:\n                          case \"end\":\n                            return _context56.stop();\n                        }\n                      }\n                    }, _callee56, null, [[0, 9]]);\n                  }));\n\n                  return function (_x35) {\n                    return _ref26.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n                return _context57.abrupt(\"return\", _context57.sent);\n\n              case 3:\n              case \"end\":\n                return _context57.stop();\n            }\n          }\n        }, _callee57, this);\n      }));\n\n      function _emitInitialSession(_x34) {\n        return _emitInitialSession2.apply(this, arguments);\n      }\n\n      return _emitInitialSession;\n    }()\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n\n  }, {\n    key: \"resetPasswordForEmail\",\n    value: function () {\n      var _resetPasswordForEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee58(email) {\n        var options,\n            codeChallenge,\n            codeChallengeMethod,\n            _yield$getCodeChallen9,\n            _yield$getCodeChallen10,\n            _args58 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee58$(_context58) {\n          while (1) {\n            switch (_context58.prev = _context58.next) {\n              case 0:\n                options = _args58.length > 1 && _args58[1] !== undefined ? _args58[1] : {};\n                codeChallenge = null;\n                codeChallengeMethod = null;\n\n                if (!(this.flowType === 'pkce')) {\n                  _context58.next = 11;\n                  break;\n                }\n\n                ;\n                _context58.next = 7;\n                return getCodeChallengeAndMethod(this.storage, this.storageKey, true // isPasswordRecovery\n                );\n\n              case 7:\n                _yield$getCodeChallen9 = _context58.sent;\n                _yield$getCodeChallen10 = _slicedToArray(_yield$getCodeChallen9, 2);\n                codeChallenge = _yield$getCodeChallen10[0];\n                codeChallengeMethod = _yield$getCodeChallen10[1];\n\n              case 11:\n                _context58.prev = 11;\n                _context58.next = 14;\n                return _request(this.fetch, 'POST', \"\".concat(this.url, \"/recover\"), {\n                  body: {\n                    email: email,\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod,\n                    gotrue_meta_security: {\n                      captcha_token: options.captchaToken\n                    }\n                  },\n                  headers: this.headers,\n                  redirectTo: options.redirectTo\n                });\n\n              case 14:\n                return _context58.abrupt(\"return\", _context58.sent);\n\n              case 17:\n                _context58.prev = 17;\n                _context58.t0 = _context58[\"catch\"](11);\n\n                if (!isAuthError(_context58.t0)) {\n                  _context58.next = 21;\n                  break;\n                }\n\n                return _context58.abrupt(\"return\", {\n                  data: null,\n                  error: _context58.t0\n                });\n\n              case 21:\n                throw _context58.t0;\n\n              case 22:\n              case \"end\":\n                return _context58.stop();\n            }\n          }\n        }, _callee58, this, [[11, 17]]);\n      }));\n\n      function resetPasswordForEmail(_x36) {\n        return _resetPasswordForEmail.apply(this, arguments);\n      }\n\n      return resetPasswordForEmail;\n    }()\n    /**\n     * Gets all the identities linked to a user.\n     */\n\n  }, {\n    key: \"getUserIdentities\",\n    value: function () {\n      var _getUserIdentities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee59() {\n        var _a, _yield$this$getUser, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee59$(_context59) {\n          while (1) {\n            switch (_context59.prev = _context59.next) {\n              case 0:\n                _context59.prev = 0;\n                _context59.next = 3;\n                return this.getUser();\n\n              case 3:\n                _yield$this$getUser = _context59.sent;\n                data = _yield$this$getUser.data;\n                error = _yield$this$getUser.error;\n\n                if (!error) {\n                  _context59.next = 8;\n                  break;\n                }\n\n                throw error;\n\n              case 8:\n                return _context59.abrupt(\"return\", {\n                  data: {\n                    identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n                  },\n                  error: null\n                });\n\n              case 11:\n                _context59.prev = 11;\n                _context59.t0 = _context59[\"catch\"](0);\n\n                if (!isAuthError(_context59.t0)) {\n                  _context59.next = 15;\n                  break;\n                }\n\n                return _context59.abrupt(\"return\", {\n                  data: null,\n                  error: _context59.t0\n                });\n\n              case 15:\n                throw _context59.t0;\n\n              case 16:\n              case \"end\":\n                return _context59.stop();\n            }\n          }\n        }, _callee59, this, [[0, 11]]);\n      }));\n\n      function getUserIdentities() {\n        return _getUserIdentities.apply(this, arguments);\n      }\n\n      return getUserIdentities;\n    }()\n    /**\n     * Links an oauth identity to an existing user.\n     * This method supports the PKCE flow.\n     */\n\n  }, {\n    key: \"linkIdentity\",\n    value: function () {\n      var _linkIdentity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee61(credentials) {\n        var _this21 = this;\n\n        var _a, _yield$this$_useSessi, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee61$(_context61) {\n          while (1) {\n            switch (_context61.prev = _context61.next) {\n              case 0:\n                _context61.prev = 0;\n                _context61.next = 3;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee60(result) {\n                    var _a, _b, _c, _d, _e, data, error, url;\n\n                    return _regeneratorRuntime().wrap(function _callee60$(_context60) {\n                      while (1) {\n                        switch (_context60.prev = _context60.next) {\n                          case 0:\n                            data = result.data, error = result.error;\n\n                            if (!error) {\n                              _context60.next = 3;\n                              break;\n                            }\n\n                            throw error;\n\n                          case 3:\n                            _context60.next = 5;\n                            return _this21._getUrlForProvider(\"\".concat(_this21.url, \"/user/identities/authorize\"), credentials.provider, {\n                              redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                              scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                              queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                              skipBrowserRedirect: true\n                            });\n\n                          case 5:\n                            url = _context60.sent;\n                            _context60.next = 8;\n                            return _request(_this21.fetch, 'GET', url, {\n                              headers: _this21.headers,\n                              jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n                            });\n\n                          case 8:\n                            return _context60.abrupt(\"return\", _context60.sent);\n\n                          case 9:\n                          case \"end\":\n                            return _context60.stop();\n                        }\n                      }\n                    }, _callee60);\n                  }));\n\n                  return function (_x38) {\n                    return _ref27.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                _yield$this$_useSessi = _context61.sent;\n                data = _yield$this$_useSessi.data;\n                error = _yield$this$_useSessi.error;\n\n                if (!error) {\n                  _context61.next = 8;\n                  break;\n                }\n\n                throw error;\n\n              case 8:\n                if (isBrowser() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n                  window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n                }\n\n                return _context61.abrupt(\"return\", {\n                  data: {\n                    provider: credentials.provider,\n                    url: data === null || data === void 0 ? void 0 : data.url\n                  },\n                  error: null\n                });\n\n              case 12:\n                _context61.prev = 12;\n                _context61.t0 = _context61[\"catch\"](0);\n\n                if (!isAuthError(_context61.t0)) {\n                  _context61.next = 16;\n                  break;\n                }\n\n                return _context61.abrupt(\"return\", {\n                  data: {\n                    provider: credentials.provider,\n                    url: null\n                  },\n                  error: _context61.t0\n                });\n\n              case 16:\n                throw _context61.t0;\n\n              case 17:\n              case \"end\":\n                return _context61.stop();\n            }\n          }\n        }, _callee61, this, [[0, 12]]);\n      }));\n\n      function linkIdentity(_x37) {\n        return _linkIdentity.apply(this, arguments);\n      }\n\n      return linkIdentity;\n    }()\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */\n\n  }, {\n    key: \"unlinkIdentity\",\n    value: function () {\n      var _unlinkIdentity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee63(identity) {\n        var _this22 = this;\n\n        return _regeneratorRuntime().wrap(function _callee63$(_context63) {\n          while (1) {\n            switch (_context63.prev = _context63.next) {\n              case 0:\n                _context63.prev = 0;\n                _context63.next = 3;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee62(result) {\n                    var _a, _b, data, error;\n\n                    return _regeneratorRuntime().wrap(function _callee62$(_context62) {\n                      while (1) {\n                        switch (_context62.prev = _context62.next) {\n                          case 0:\n                            data = result.data, error = result.error;\n\n                            if (!error) {\n                              _context62.next = 3;\n                              break;\n                            }\n\n                            throw error;\n\n                          case 3:\n                            _context62.next = 5;\n                            return _request(_this22.fetch, 'DELETE', \"\".concat(_this22.url, \"/user/identities/\").concat(identity.identity_id), {\n                              headers: _this22.headers,\n                              jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n                            });\n\n                          case 5:\n                            return _context62.abrupt(\"return\", _context62.sent);\n\n                          case 6:\n                          case \"end\":\n                            return _context62.stop();\n                        }\n                      }\n                    }, _callee62);\n                  }));\n\n                  return function (_x40) {\n                    return _ref28.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                return _context63.abrupt(\"return\", _context63.sent);\n\n              case 6:\n                _context63.prev = 6;\n                _context63.t0 = _context63[\"catch\"](0);\n\n                if (!isAuthError(_context63.t0)) {\n                  _context63.next = 10;\n                  break;\n                }\n\n                return _context63.abrupt(\"return\", {\n                  data: null,\n                  error: _context63.t0\n                });\n\n              case 10:\n                throw _context63.t0;\n\n              case 11:\n              case \"end\":\n                return _context63.stop();\n            }\n          }\n        }, _callee63, this, [[0, 6]]);\n      }));\n\n      function unlinkIdentity(_x39) {\n        return _unlinkIdentity.apply(this, arguments);\n      }\n\n      return unlinkIdentity;\n    }()\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n\n  }, {\n    key: \"_refreshAccessToken\",\n    value: function () {\n      var _refreshAccessToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee65(refreshToken) {\n        var _this23 = this;\n\n        var debugName, startedAt;\n        return _regeneratorRuntime().wrap(function _callee65$(_context65) {\n          while (1) {\n            switch (_context65.prev = _context65.next) {\n              case 0:\n                debugName = \"#_refreshAccessToken(\".concat(refreshToken.substring(0, 5), \"...)\");\n\n                this._debug(debugName, 'begin');\n\n                _context65.prev = 2;\n                startedAt = Date.now(); // will attempt to refresh the token with exponential backoff\n\n                _context65.next = 6;\n                return retryable( /*#__PURE__*/function () {\n                  var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee64(attempt) {\n                    return _regeneratorRuntime().wrap(function _callee64$(_context64) {\n                      while (1) {\n                        switch (_context64.prev = _context64.next) {\n                          case 0:\n                            if (!(attempt > 0)) {\n                              _context64.next = 3;\n                              break;\n                            }\n\n                            _context64.next = 3;\n                            return sleep(200 * Math.pow(2, attempt - 1));\n\n                          case 3:\n                            _this23._debug(debugName, 'refreshing attempt', attempt);\n\n                            _context64.next = 6;\n                            return _request(_this23.fetch, 'POST', \"\".concat(_this23.url, \"/token?grant_type=refresh_token\"), {\n                              body: {\n                                refresh_token: refreshToken\n                              },\n                              headers: _this23.headers,\n                              xform: _sessionResponse\n                            });\n\n                          case 6:\n                            return _context64.abrupt(\"return\", _context64.sent);\n\n                          case 7:\n                          case \"end\":\n                            return _context64.stop();\n                        }\n                      }\n                    }, _callee64);\n                  }));\n\n                  return function (_x42) {\n                    return _ref29.apply(this, arguments);\n                  };\n                }(), function (attempt, error) {\n                  var nextBackOffInterval = 200 * Math.pow(2, attempt);\n                  return error && isAuthRetryableFetchError(error) && // retryable only if the request can be sent before the backoff overflows the tick duration\n                  Date.now() + nextBackOffInterval - startedAt < AUTO_REFRESH_TICK_DURATION;\n                });\n\n              case 6:\n                return _context65.abrupt(\"return\", _context65.sent);\n\n              case 9:\n                _context65.prev = 9;\n                _context65.t0 = _context65[\"catch\"](2);\n\n                this._debug(debugName, 'error', _context65.t0);\n\n                if (!isAuthError(_context65.t0)) {\n                  _context65.next = 14;\n                  break;\n                }\n\n                return _context65.abrupt(\"return\", {\n                  data: {\n                    session: null,\n                    user: null\n                  },\n                  error: _context65.t0\n                });\n\n              case 14:\n                throw _context65.t0;\n\n              case 15:\n                _context65.prev = 15;\n\n                this._debug(debugName, 'end');\n\n                return _context65.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context65.stop();\n            }\n          }\n        }, _callee65, this, [[2, 9, 15, 18]]);\n      }));\n\n      function _refreshAccessToken(_x41) {\n        return _refreshAccessToken2.apply(this, arguments);\n      }\n\n      return _refreshAccessToken;\n    }()\n  }, {\n    key: \"_isValidSession\",\n    value: function _isValidSession(maybeSession) {\n      var isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n      return isValidSession;\n    }\n  }, {\n    key: \"_handleProviderSignIn\",\n    value: function () {\n      var _handleProviderSignIn2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee66(provider, options) {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee66$(_context66) {\n          while (1) {\n            switch (_context66.prev = _context66.next) {\n              case 0:\n                _context66.next = 2;\n                return this._getUrlForProvider(\"\".concat(this.url, \"/authorize\"), provider, {\n                  redirectTo: options.redirectTo,\n                  scopes: options.scopes,\n                  queryParams: options.queryParams\n                });\n\n              case 2:\n                url = _context66.sent;\n\n                this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url); // try to open on the browser\n\n\n                if (isBrowser() && !options.skipBrowserRedirect) {\n                  window.location.assign(url);\n                }\n\n                return _context66.abrupt(\"return\", {\n                  data: {\n                    provider: provider,\n                    url: url\n                  },\n                  error: null\n                });\n\n              case 6:\n              case \"end\":\n                return _context66.stop();\n            }\n          }\n        }, _callee66, this);\n      }));\n\n      function _handleProviderSignIn(_x43, _x44) {\n        return _handleProviderSignIn2.apply(this, arguments);\n      }\n\n      return _handleProviderSignIn;\n    }()\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n\n  }, {\n    key: \"_recoverAndRefresh\",\n    value: function () {\n      var _recoverAndRefresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee67() {\n        var _a, debugName, currentSession, timeNow, expiresWithMargin, _yield$this$_callRefr3, error;\n\n        return _regeneratorRuntime().wrap(function _callee67$(_context67) {\n          while (1) {\n            switch (_context67.prev = _context67.next) {\n              case 0:\n                debugName = '#_recoverAndRefresh()';\n\n                this._debug(debugName, 'begin');\n\n                _context67.prev = 2;\n                _context67.next = 5;\n                return getItemAsync(this.storage, this.storageKey);\n\n              case 5:\n                currentSession = _context67.sent;\n\n                this._debug(debugName, 'session from storage', currentSession);\n\n                if (this._isValidSession(currentSession)) {\n                  _context67.next = 13;\n                  break;\n                }\n\n                this._debug(debugName, 'session is not valid');\n\n                if (!(currentSession !== null)) {\n                  _context67.next = 12;\n                  break;\n                }\n\n                _context67.next = 12;\n                return this._removeSession();\n\n              case 12:\n                return _context67.abrupt(\"return\");\n\n              case 13:\n                timeNow = Math.round(Date.now() / 1000);\n                expiresWithMargin = ((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN;\n\n                this._debug(debugName, \"session has\".concat(expiresWithMargin ? '' : ' not', \" expired with margin of \").concat(EXPIRY_MARGIN, \"s\"));\n\n                if (!expiresWithMargin) {\n                  _context67.next = 30;\n                  break;\n                }\n\n                if (!(this.autoRefreshToken && currentSession.refresh_token)) {\n                  _context67.next = 28;\n                  break;\n                }\n\n                _context67.next = 20;\n                return this._callRefreshToken(currentSession.refresh_token);\n\n              case 20:\n                _yield$this$_callRefr3 = _context67.sent;\n                error = _yield$this$_callRefr3.error;\n\n                if (!error) {\n                  _context67.next = 28;\n                  break;\n                }\n\n                console.error(error);\n\n                if (isAuthRetryableFetchError(error)) {\n                  _context67.next = 28;\n                  break;\n                }\n\n                this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n\n                _context67.next = 28;\n                return this._removeSession();\n\n              case 28:\n                _context67.next = 32;\n                break;\n\n              case 30:\n                _context67.next = 32;\n                return this._notifyAllSubscribers('SIGNED_IN', currentSession);\n\n              case 32:\n                _context67.next = 39;\n                break;\n\n              case 34:\n                _context67.prev = 34;\n                _context67.t0 = _context67[\"catch\"](2);\n\n                this._debug(debugName, 'error', _context67.t0);\n\n                console.error(_context67.t0);\n                return _context67.abrupt(\"return\");\n\n              case 39:\n                _context67.prev = 39;\n\n                this._debug(debugName, 'end');\n\n                return _context67.finish(39);\n\n              case 42:\n              case \"end\":\n                return _context67.stop();\n            }\n          }\n        }, _callee67, this, [[2, 34, 39, 42]]);\n      }));\n\n      function _recoverAndRefresh() {\n        return _recoverAndRefresh2.apply(this, arguments);\n      }\n\n      return _recoverAndRefresh;\n    }()\n  }, {\n    key: \"_callRefreshToken\",\n    value: function () {\n      var _callRefreshToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee68(refreshToken) {\n        var _a, _b, debugName, _yield$this$_refreshA, data, error, result, _result2;\n\n        return _regeneratorRuntime().wrap(function _callee68$(_context68) {\n          while (1) {\n            switch (_context68.prev = _context68.next) {\n              case 0:\n                if (refreshToken) {\n                  _context68.next = 2;\n                  break;\n                }\n\n                throw new AuthSessionMissingError();\n\n              case 2:\n                if (!this.refreshingDeferred) {\n                  _context68.next = 4;\n                  break;\n                }\n\n                return _context68.abrupt(\"return\", this.refreshingDeferred.promise);\n\n              case 4:\n                debugName = \"#_callRefreshToken(\".concat(refreshToken.substring(0, 5), \"...)\");\n\n                this._debug(debugName, 'begin');\n\n                _context68.prev = 6;\n                this.refreshingDeferred = new Deferred();\n                _context68.next = 10;\n                return this._refreshAccessToken(refreshToken);\n\n              case 10:\n                _yield$this$_refreshA = _context68.sent;\n                data = _yield$this$_refreshA.data;\n                error = _yield$this$_refreshA.error;\n\n                if (!error) {\n                  _context68.next = 15;\n                  break;\n                }\n\n                throw error;\n\n              case 15:\n                if (data.session) {\n                  _context68.next = 17;\n                  break;\n                }\n\n                throw new AuthSessionMissingError();\n\n              case 17:\n                _context68.next = 19;\n                return this._saveSession(data.session);\n\n              case 19:\n                _context68.next = 21;\n                return this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n\n              case 21:\n                result = {\n                  session: data.session,\n                  error: null\n                };\n                this.refreshingDeferred.resolve(result);\n                return _context68.abrupt(\"return\", result);\n\n              case 26:\n                _context68.prev = 26;\n                _context68.t0 = _context68[\"catch\"](6);\n\n                this._debug(debugName, 'error', _context68.t0);\n\n                if (!isAuthError(_context68.t0)) {\n                  _context68.next = 38;\n                  break;\n                }\n\n                _result2 = {\n                  session: null,\n                  error: _context68.t0\n                };\n\n                if (isAuthRetryableFetchError(_context68.t0)) {\n                  _context68.next = 36;\n                  break;\n                }\n\n                _context68.next = 34;\n                return this._removeSession();\n\n              case 34:\n                _context68.next = 36;\n                return this._notifyAllSubscribers('SIGNED_OUT', null);\n\n              case 36:\n                (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(_result2);\n                return _context68.abrupt(\"return\", _result2);\n\n              case 38:\n                (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(_context68.t0);\n                throw _context68.t0;\n\n              case 40:\n                _context68.prev = 40;\n                this.refreshingDeferred = null;\n\n                this._debug(debugName, 'end');\n\n                return _context68.finish(40);\n\n              case 44:\n              case \"end\":\n                return _context68.stop();\n            }\n          }\n        }, _callee68, this, [[6, 26, 40, 44]]);\n      }));\n\n      function _callRefreshToken(_x45) {\n        return _callRefreshToken2.apply(this, arguments);\n      }\n\n      return _callRefreshToken;\n    }()\n  }, {\n    key: \"_notifyAllSubscribers\",\n    value: function () {\n      var _notifyAllSubscribers2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee70(event, session) {\n        var broadcast,\n            debugName,\n            errors,\n            promises,\n            i,\n            _args70 = arguments;\n        return _regeneratorRuntime().wrap(function _callee70$(_context70) {\n          while (1) {\n            switch (_context70.prev = _context70.next) {\n              case 0:\n                broadcast = _args70.length > 2 && _args70[2] !== undefined ? _args70[2] : true;\n                debugName = \"#_notifyAllSubscribers(\".concat(event, \")\");\n\n                this._debug(debugName, 'begin', session, \"broadcast = \".concat(broadcast));\n\n                _context70.prev = 3;\n\n                if (this.broadcastChannel && broadcast) {\n                  this.broadcastChannel.postMessage({\n                    event: event,\n                    session: session\n                  });\n                }\n\n                errors = [];\n                promises = Array.from(this.stateChangeEmitters.values()).map( /*#__PURE__*/function () {\n                  var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee69(x) {\n                    return _regeneratorRuntime().wrap(function _callee69$(_context69) {\n                      while (1) {\n                        switch (_context69.prev = _context69.next) {\n                          case 0:\n                            _context69.prev = 0;\n                            _context69.next = 3;\n                            return x.callback(event, session);\n\n                          case 3:\n                            _context69.next = 8;\n                            break;\n\n                          case 5:\n                            _context69.prev = 5;\n                            _context69.t0 = _context69[\"catch\"](0);\n                            errors.push(_context69.t0);\n\n                          case 8:\n                          case \"end\":\n                            return _context69.stop();\n                        }\n                      }\n                    }, _callee69, null, [[0, 5]]);\n                  }));\n\n                  return function (_x48) {\n                    return _ref30.apply(this, arguments);\n                  };\n                }());\n                _context70.next = 9;\n                return Promise.all(promises);\n\n              case 9:\n                if (!(errors.length > 0)) {\n                  _context70.next = 12;\n                  break;\n                }\n\n                for (i = 0; i < errors.length; i += 1) {\n                  console.error(errors[i]);\n                }\n\n                throw errors[0];\n\n              case 12:\n                _context70.prev = 12;\n\n                this._debug(debugName, 'end');\n\n                return _context70.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context70.stop();\n            }\n          }\n        }, _callee70, this, [[3,, 12, 15]]);\n      }));\n\n      function _notifyAllSubscribers(_x46, _x47) {\n        return _notifyAllSubscribers2.apply(this, arguments);\n      }\n\n      return _notifyAllSubscribers;\n    }()\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n\n  }, {\n    key: \"_saveSession\",\n    value: function () {\n      var _saveSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee71(session) {\n        return _regeneratorRuntime().wrap(function _callee71$(_context71) {\n          while (1) {\n            switch (_context71.prev = _context71.next) {\n              case 0:\n                this._debug('#_saveSession()', session); // _saveSession is always called whenever a new session has been acquired\n                // so we can safely suppress the warning returned by future getSession calls\n\n\n                this.suppressGetSessionWarning = true;\n                _context71.next = 4;\n                return setItemAsync(this.storage, this.storageKey, session);\n\n              case 4:\n              case \"end\":\n                return _context71.stop();\n            }\n          }\n        }, _callee71, this);\n      }));\n\n      function _saveSession(_x49) {\n        return _saveSession2.apply(this, arguments);\n      }\n\n      return _saveSession;\n    }()\n  }, {\n    key: \"_removeSession\",\n    value: function () {\n      var _removeSession2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee72() {\n        return _regeneratorRuntime().wrap(function _callee72$(_context72) {\n          while (1) {\n            switch (_context72.prev = _context72.next) {\n              case 0:\n                this._debug('#_removeSession()');\n\n                _context72.next = 3;\n                return removeItemAsync(this.storage, this.storageKey);\n\n              case 3:\n              case \"end\":\n                return _context72.stop();\n            }\n          }\n        }, _callee72, this);\n      }));\n\n      function _removeSession() {\n        return _removeSession2.apply(this, arguments);\n      }\n\n      return _removeSession;\n    }()\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n\n  }, {\n    key: \"_removeVisibilityChangedCallback\",\n    value: function _removeVisibilityChangedCallback() {\n      this._debug('#_removeVisibilityChangedCallback()');\n\n      var callback = this.visibilityChangedCallback;\n      this.visibilityChangedCallback = null;\n\n      try {\n        if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n          window.removeEventListener('visibilitychange', callback);\n        }\n      } catch (e) {\n        console.error('removing visibilitychange callback failed', e);\n      }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n\n  }, {\n    key: \"_startAutoRefresh\",\n    value: function () {\n      var _startAutoRefresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee74() {\n        var _this24 = this;\n\n        var ticker;\n        return _regeneratorRuntime().wrap(function _callee74$(_context74) {\n          while (1) {\n            switch (_context74.prev = _context74.next) {\n              case 0:\n                _context74.next = 2;\n                return this._stopAutoRefresh();\n\n              case 2:\n                this._debug('#_startAutoRefresh()');\n\n                ticker = setInterval(function () {\n                  return _this24._autoRefreshTokenTick();\n                }, AUTO_REFRESH_TICK_DURATION);\n                this.autoRefreshTicker = ticker;\n\n                if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n                  // ticker is a NodeJS Timeout object that has an `unref` method\n                  // https://nodejs.org/api/timers.html#timeoutunref\n                  // When auto refresh is used in NodeJS (like for testing) the\n                  // `setInterval` is preventing the process from being marked as\n                  // finished and tests run endlessly. This can be prevented by calling\n                  // `unref()` on the returned object.\n                  ticker.unref(); // @ts-ignore\n                } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n                  // similar like for NodeJS, but with the Deno API\n                  // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n                  // @ts-ignore\n                  Deno.unrefTimer(ticker);\n                } // run the tick immediately, but in the next pass of the event loop so that\n                // #_initialize can be allowed to complete without recursively waiting on\n                // itself\n\n\n                setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee73() {\n                  return _regeneratorRuntime().wrap(function _callee73$(_context73) {\n                    while (1) {\n                      switch (_context73.prev = _context73.next) {\n                        case 0:\n                          _context73.next = 2;\n                          return _this24.initializePromise;\n\n                        case 2:\n                          _context73.next = 4;\n                          return _this24._autoRefreshTokenTick();\n\n                        case 4:\n                        case \"end\":\n                          return _context73.stop();\n                      }\n                    }\n                  }, _callee73);\n                })), 0);\n\n              case 7:\n              case \"end\":\n                return _context74.stop();\n            }\n          }\n        }, _callee74, this);\n      }));\n\n      function _startAutoRefresh() {\n        return _startAutoRefresh2.apply(this, arguments);\n      }\n\n      return _startAutoRefresh;\n    }()\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n\n  }, {\n    key: \"_stopAutoRefresh\",\n    value: function () {\n      var _stopAutoRefresh2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee75() {\n        var ticker;\n        return _regeneratorRuntime().wrap(function _callee75$(_context75) {\n          while (1) {\n            switch (_context75.prev = _context75.next) {\n              case 0:\n                this._debug('#_stopAutoRefresh()');\n\n                ticker = this.autoRefreshTicker;\n                this.autoRefreshTicker = null;\n\n                if (ticker) {\n                  clearInterval(ticker);\n                }\n\n              case 4:\n              case \"end\":\n                return _context75.stop();\n            }\n          }\n        }, _callee75, this);\n      }));\n\n      function _stopAutoRefresh() {\n        return _stopAutoRefresh2.apply(this, arguments);\n      }\n\n      return _stopAutoRefresh;\n    }()\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n\n  }, {\n    key: \"startAutoRefresh\",\n    value: function () {\n      var _startAutoRefresh3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee76() {\n        return _regeneratorRuntime().wrap(function _callee76$(_context76) {\n          while (1) {\n            switch (_context76.prev = _context76.next) {\n              case 0:\n                this._removeVisibilityChangedCallback();\n\n                _context76.next = 3;\n                return this._startAutoRefresh();\n\n              case 3:\n              case \"end\":\n                return _context76.stop();\n            }\n          }\n        }, _callee76, this);\n      }));\n\n      function startAutoRefresh() {\n        return _startAutoRefresh3.apply(this, arguments);\n      }\n\n      return startAutoRefresh;\n    }()\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n\n  }, {\n    key: \"stopAutoRefresh\",\n    value: function () {\n      var _stopAutoRefresh3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee77() {\n        return _regeneratorRuntime().wrap(function _callee77$(_context77) {\n          while (1) {\n            switch (_context77.prev = _context77.next) {\n              case 0:\n                this._removeVisibilityChangedCallback();\n\n                _context77.next = 3;\n                return this._stopAutoRefresh();\n\n              case 3:\n              case \"end\":\n                return _context77.stop();\n            }\n          }\n        }, _callee77, this);\n      }));\n\n      function stopAutoRefresh() {\n        return _stopAutoRefresh3.apply(this, arguments);\n      }\n\n      return stopAutoRefresh;\n    }()\n    /**\n     * Runs the auto refresh token tick.\n     */\n\n  }, {\n    key: \"_autoRefreshTokenTick\",\n    value: function () {\n      var _autoRefreshTokenTick2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee80() {\n        var _this25 = this;\n\n        return _regeneratorRuntime().wrap(function _callee80$(_context80) {\n          while (1) {\n            switch (_context80.prev = _context80.next) {\n              case 0:\n                this._debug('#_autoRefreshTokenTick()', 'begin');\n\n                _context80.prev = 1;\n                _context80.next = 4;\n                return this._acquireLock(0, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee79() {\n                  var now;\n                  return _regeneratorRuntime().wrap(function _callee79$(_context79) {\n                    while (1) {\n                      switch (_context79.prev = _context79.next) {\n                        case 0:\n                          _context79.prev = 0;\n                          now = Date.now();\n                          _context79.prev = 2;\n                          _context79.next = 5;\n                          return _this25._useSession( /*#__PURE__*/function () {\n                            var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee78(result) {\n                              var session, expiresInTicks;\n                              return _regeneratorRuntime().wrap(function _callee78$(_context78) {\n                                while (1) {\n                                  switch (_context78.prev = _context78.next) {\n                                    case 0:\n                                      session = result.data.session;\n\n                                      if (!(!session || !session.refresh_token || !session.expires_at)) {\n                                        _context78.next = 4;\n                                        break;\n                                      }\n\n                                      _this25._debug('#_autoRefreshTokenTick()', 'no session');\n\n                                      return _context78.abrupt(\"return\");\n\n                                    case 4:\n                                      // session will expire in this many ticks (or has already expired if <= 0)\n                                      expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\n\n                                      _this25._debug('#_autoRefreshTokenTick()', \"access token expires in \".concat(expiresInTicks, \" ticks, a tick lasts \").concat(AUTO_REFRESH_TICK_DURATION, \"ms, refresh threshold is \").concat(AUTO_REFRESH_TICK_THRESHOLD, \" ticks\"));\n\n                                      if (!(expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD)) {\n                                        _context78.next = 9;\n                                        break;\n                                      }\n\n                                      _context78.next = 9;\n                                      return _this25._callRefreshToken(session.refresh_token);\n\n                                    case 9:\n                                    case \"end\":\n                                      return _context78.stop();\n                                  }\n                                }\n                              }, _callee78);\n                            }));\n\n                            return function (_x50) {\n                              return _ref33.apply(this, arguments);\n                            };\n                          }());\n\n                        case 5:\n                          return _context79.abrupt(\"return\", _context79.sent);\n\n                        case 8:\n                          _context79.prev = 8;\n                          _context79.t0 = _context79[\"catch\"](2);\n                          console.error('Auto refresh tick failed with error. This is likely a transient error.', _context79.t0);\n\n                        case 11:\n                          _context79.prev = 11;\n\n                          _this25._debug('#_autoRefreshTokenTick()', 'end');\n\n                          return _context79.finish(11);\n\n                        case 14:\n                        case \"end\":\n                          return _context79.stop();\n                      }\n                    }\n                  }, _callee79, null, [[0,, 11, 14], [2, 8]]);\n                })));\n\n              case 4:\n                _context80.next = 13;\n                break;\n\n              case 6:\n                _context80.prev = 6;\n                _context80.t0 = _context80[\"catch\"](1);\n\n                if (!(_context80.t0.isAcquireTimeout || _context80.t0 instanceof LockAcquireTimeoutError)) {\n                  _context80.next = 12;\n                  break;\n                }\n\n                this._debug('auto refresh token tick lock not available');\n\n                _context80.next = 13;\n                break;\n\n              case 12:\n                throw _context80.t0;\n\n              case 13:\n              case \"end\":\n                return _context80.stop();\n            }\n          }\n        }, _callee80, this, [[1, 6]]);\n      }));\n\n      function _autoRefreshTokenTick() {\n        return _autoRefreshTokenTick2.apply(this, arguments);\n      }\n\n      return _autoRefreshTokenTick;\n    }()\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n\n  }, {\n    key: \"_handleVisibilityChange\",\n    value: function () {\n      var _handleVisibilityChange2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee82() {\n        var _this26 = this;\n\n        return _regeneratorRuntime().wrap(function _callee82$(_context82) {\n          while (1) {\n            switch (_context82.prev = _context82.next) {\n              case 0:\n                this._debug('#_handleVisibilityChange()');\n\n                if (!(!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener))) {\n                  _context82.next = 4;\n                  break;\n                }\n\n                if (this.autoRefreshToken) {\n                  // in non-browser environments the refresh token ticker runs always\n                  this.startAutoRefresh();\n                }\n\n                return _context82.abrupt(\"return\", false);\n\n              case 4:\n                _context82.prev = 4;\n                this.visibilityChangedCallback = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee81() {\n                  return _regeneratorRuntime().wrap(function _callee81$(_context81) {\n                    while (1) {\n                      switch (_context81.prev = _context81.next) {\n                        case 0:\n                          _context81.next = 2;\n                          return _this26._onVisibilityChanged(false);\n\n                        case 2:\n                          return _context81.abrupt(\"return\", _context81.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context81.stop();\n                      }\n                    }\n                  }, _callee81);\n                }));\n                window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback); // now immediately call the visbility changed callback to setup with the\n                // current visbility state\n\n                _context82.next = 9;\n                return this._onVisibilityChanged(true);\n\n              case 9:\n                _context82.next = 14;\n                break;\n\n              case 11:\n                _context82.prev = 11;\n                _context82.t0 = _context82[\"catch\"](4);\n                console.error('_handleVisibilityChange', _context82.t0);\n\n              case 14:\n              case \"end\":\n                return _context82.stop();\n            }\n          }\n        }, _callee82, this, [[4, 11]]);\n      }));\n\n      function _handleVisibilityChange() {\n        return _handleVisibilityChange2.apply(this, arguments);\n      }\n\n      return _handleVisibilityChange;\n    }()\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n\n  }, {\n    key: \"_onVisibilityChanged\",\n    value: function () {\n      var _onVisibilityChanged2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee84(calledFromInitialize) {\n        var _this27 = this;\n\n        var methodName;\n        return _regeneratorRuntime().wrap(function _callee84$(_context84) {\n          while (1) {\n            switch (_context84.prev = _context84.next) {\n              case 0:\n                methodName = \"#_onVisibilityChanged(\".concat(calledFromInitialize, \")\");\n\n                this._debug(methodName, 'visibilityState', document.visibilityState);\n\n                if (!(document.visibilityState === 'visible')) {\n                  _context84.next = 11;\n                  break;\n                }\n\n                if (this.autoRefreshToken) {\n                  // in browser environments the refresh token ticker runs only on focused tabs\n                  // which prevents race conditions\n                  this._startAutoRefresh();\n                }\n\n                if (calledFromInitialize) {\n                  _context84.next = 9;\n                  break;\n                }\n\n                _context84.next = 7;\n                return this.initializePromise;\n\n              case 7:\n                _context84.next = 9;\n                return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee83() {\n                  return _regeneratorRuntime().wrap(function _callee83$(_context83) {\n                    while (1) {\n                      switch (_context83.prev = _context83.next) {\n                        case 0:\n                          if (!(document.visibilityState !== 'visible')) {\n                            _context83.next = 3;\n                            break;\n                          }\n\n                          _this27._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting'); // visibility has changed while waiting for the lock, abort\n\n\n                          return _context83.abrupt(\"return\");\n\n                        case 3:\n                          _context83.next = 5;\n                          return _this27._recoverAndRefresh();\n\n                        case 5:\n                        case \"end\":\n                          return _context83.stop();\n                      }\n                    }\n                  }, _callee83);\n                })));\n\n              case 9:\n                _context84.next = 12;\n                break;\n\n              case 11:\n                if (document.visibilityState === 'hidden') {\n                  if (this.autoRefreshToken) {\n                    this._stopAutoRefresh();\n                  }\n                }\n\n              case 12:\n              case \"end\":\n                return _context84.stop();\n            }\n          }\n        }, _callee84, this);\n      }));\n\n      function _onVisibilityChanged(_x51) {\n        return _onVisibilityChanged2.apply(this, arguments);\n      }\n\n      return _onVisibilityChanged;\n    }()\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n\n  }, {\n    key: \"_getUrlForProvider\",\n    value: function () {\n      var _getUrlForProvider2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee85(url, provider, options) {\n        var urlParams, _yield$getCodeChallen11, _yield$getCodeChallen12, codeChallenge, codeChallengeMethod, flowParams, query;\n\n        return _regeneratorRuntime().wrap(function _callee85$(_context85) {\n          while (1) {\n            switch (_context85.prev = _context85.next) {\n              case 0:\n                urlParams = [\"provider=\".concat(encodeURIComponent(provider))];\n\n                if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n                  urlParams.push(\"redirect_to=\".concat(encodeURIComponent(options.redirectTo)));\n                }\n\n                if (options === null || options === void 0 ? void 0 : options.scopes) {\n                  urlParams.push(\"scopes=\".concat(encodeURIComponent(options.scopes)));\n                }\n\n                if (!(this.flowType === 'pkce')) {\n                  _context85.next = 12;\n                  break;\n                }\n\n                _context85.next = 6;\n                return getCodeChallengeAndMethod(this.storage, this.storageKey);\n\n              case 6:\n                _yield$getCodeChallen11 = _context85.sent;\n                _yield$getCodeChallen12 = _slicedToArray(_yield$getCodeChallen11, 2);\n                codeChallenge = _yield$getCodeChallen12[0];\n                codeChallengeMethod = _yield$getCodeChallen12[1];\n                flowParams = new URLSearchParams({\n                  code_challenge: \"\".concat(encodeURIComponent(codeChallenge)),\n                  code_challenge_method: \"\".concat(encodeURIComponent(codeChallengeMethod))\n                });\n                urlParams.push(flowParams.toString());\n\n              case 12:\n                if (options === null || options === void 0 ? void 0 : options.queryParams) {\n                  query = new URLSearchParams(options.queryParams);\n                  urlParams.push(query.toString());\n                }\n\n                if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n                  urlParams.push(\"skip_http_redirect=\".concat(options.skipBrowserRedirect));\n                }\n\n                return _context85.abrupt(\"return\", \"\".concat(url, \"?\").concat(urlParams.join('&')));\n\n              case 15:\n              case \"end\":\n                return _context85.stop();\n            }\n          }\n        }, _callee85, this);\n      }));\n\n      function _getUrlForProvider(_x52, _x53, _x54) {\n        return _getUrlForProvider2.apply(this, arguments);\n      }\n\n      return _getUrlForProvider;\n    }()\n  }, {\n    key: \"_unenroll\",\n    value: function () {\n      var _unenroll2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee87(params) {\n        var _this28 = this;\n\n        return _regeneratorRuntime().wrap(function _callee87$(_context87) {\n          while (1) {\n            switch (_context87.prev = _context87.next) {\n              case 0:\n                _context87.prev = 0;\n                _context87.next = 3;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref36 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee86(result) {\n                    var _a, sessionData, sessionError;\n\n                    return _regeneratorRuntime().wrap(function _callee86$(_context86) {\n                      while (1) {\n                        switch (_context86.prev = _context86.next) {\n                          case 0:\n                            sessionData = result.data, sessionError = result.error;\n\n                            if (!sessionError) {\n                              _context86.next = 3;\n                              break;\n                            }\n\n                            return _context86.abrupt(\"return\", {\n                              data: null,\n                              error: sessionError\n                            });\n\n                          case 3:\n                            _context86.next = 5;\n                            return _request(_this28.fetch, 'DELETE', \"\".concat(_this28.url, \"/factors/\").concat(params.factorId), {\n                              headers: _this28.headers,\n                              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                            });\n\n                          case 5:\n                            return _context86.abrupt(\"return\", _context86.sent);\n\n                          case 6:\n                          case \"end\":\n                            return _context86.stop();\n                        }\n                      }\n                    }, _callee86);\n                  }));\n\n                  return function (_x56) {\n                    return _ref36.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                return _context87.abrupt(\"return\", _context87.sent);\n\n              case 6:\n                _context87.prev = 6;\n                _context87.t0 = _context87[\"catch\"](0);\n\n                if (!isAuthError(_context87.t0)) {\n                  _context87.next = 10;\n                  break;\n                }\n\n                return _context87.abrupt(\"return\", {\n                  data: null,\n                  error: _context87.t0\n                });\n\n              case 10:\n                throw _context87.t0;\n\n              case 11:\n              case \"end\":\n                return _context87.stop();\n            }\n          }\n        }, _callee87, this, [[0, 6]]);\n      }));\n\n      function _unenroll(_x55) {\n        return _unenroll2.apply(this, arguments);\n      }\n\n      return _unenroll;\n    }()\n    /**\n     * {@see GoTrueMFAApi#enroll}\n     */\n\n  }, {\n    key: \"_enroll\",\n    value: function () {\n      var _enroll2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee89(params) {\n        var _this29 = this;\n\n        return _regeneratorRuntime().wrap(function _callee89$(_context89) {\n          while (1) {\n            switch (_context89.prev = _context89.next) {\n              case 0:\n                _context89.prev = 0;\n                _context89.next = 3;\n                return this._useSession( /*#__PURE__*/function () {\n                  var _ref37 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee88(result) {\n                    var _a, _b, sessionData, sessionError, _yield$_request9, data, error;\n\n                    return _regeneratorRuntime().wrap(function _callee88$(_context88) {\n                      while (1) {\n                        switch (_context88.prev = _context88.next) {\n                          case 0:\n                            sessionData = result.data, sessionError = result.error;\n\n                            if (!sessionError) {\n                              _context88.next = 3;\n                              break;\n                            }\n\n                            return _context88.abrupt(\"return\", {\n                              data: null,\n                              error: sessionError\n                            });\n\n                          case 3:\n                            _context88.next = 5;\n                            return _request(_this29.fetch, 'POST', \"\".concat(_this29.url, \"/factors\"), {\n                              body: {\n                                friendly_name: params.friendlyName,\n                                factor_type: params.factorType,\n                                issuer: params.issuer\n                              },\n                              headers: _this29.headers,\n                              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                            });\n\n                          case 5:\n                            _yield$_request9 = _context88.sent;\n                            data = _yield$_request9.data;\n                            error = _yield$_request9.error;\n\n                            if (!error) {\n                              _context88.next = 10;\n                              break;\n                            }\n\n                            return _context88.abrupt(\"return\", {\n                              data: null,\n                              error: error\n                            });\n\n                          case 10:\n                            if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\n                              data.totp.qr_code = \"data:image/svg+xml;utf-8,\".concat(data.totp.qr_code);\n                            }\n\n                            return _context88.abrupt(\"return\", {\n                              data: data,\n                              error: null\n                            });\n\n                          case 12:\n                          case \"end\":\n                            return _context88.stop();\n                        }\n                      }\n                    }, _callee88);\n                  }));\n\n                  return function (_x58) {\n                    return _ref37.apply(this, arguments);\n                  };\n                }());\n\n              case 3:\n                return _context89.abrupt(\"return\", _context89.sent);\n\n              case 6:\n                _context89.prev = 6;\n                _context89.t0 = _context89[\"catch\"](0);\n\n                if (!isAuthError(_context89.t0)) {\n                  _context89.next = 10;\n                  break;\n                }\n\n                return _context89.abrupt(\"return\", {\n                  data: null,\n                  error: _context89.t0\n                });\n\n              case 10:\n                throw _context89.t0;\n\n              case 11:\n              case \"end\":\n                return _context89.stop();\n            }\n          }\n        }, _callee89, this, [[0, 6]]);\n      }));\n\n      function _enroll(_x57) {\n        return _enroll2.apply(this, arguments);\n      }\n\n      return _enroll;\n    }()\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n\n  }, {\n    key: \"_verify\",\n    value: function () {\n      var _verify2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee92(params) {\n        var _this30 = this;\n\n        return _regeneratorRuntime().wrap(function _callee92$(_context92) {\n          while (1) {\n            switch (_context92.prev = _context92.next) {\n              case 0:\n                return _context92.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee91() {\n                  return _regeneratorRuntime().wrap(function _callee91$(_context91) {\n                    while (1) {\n                      switch (_context91.prev = _context91.next) {\n                        case 0:\n                          _context91.prev = 0;\n                          _context91.next = 3;\n                          return _this30._useSession( /*#__PURE__*/function () {\n                            var _ref39 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee90(result) {\n                              var _a, sessionData, sessionError, _yield$_request10, data, error;\n\n                              return _regeneratorRuntime().wrap(function _callee90$(_context90) {\n                                while (1) {\n                                  switch (_context90.prev = _context90.next) {\n                                    case 0:\n                                      sessionData = result.data, sessionError = result.error;\n\n                                      if (!sessionError) {\n                                        _context90.next = 3;\n                                        break;\n                                      }\n\n                                      return _context90.abrupt(\"return\", {\n                                        data: null,\n                                        error: sessionError\n                                      });\n\n                                    case 3:\n                                      _context90.next = 5;\n                                      return _request(_this30.fetch, 'POST', \"\".concat(_this30.url, \"/factors/\").concat(params.factorId, \"/verify\"), {\n                                        body: {\n                                          code: params.code,\n                                          challenge_id: params.challengeId\n                                        },\n                                        headers: _this30.headers,\n                                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                                      });\n\n                                    case 5:\n                                      _yield$_request10 = _context90.sent;\n                                      data = _yield$_request10.data;\n                                      error = _yield$_request10.error;\n\n                                      if (!error) {\n                                        _context90.next = 10;\n                                        break;\n                                      }\n\n                                      return _context90.abrupt(\"return\", {\n                                        data: null,\n                                        error: error\n                                      });\n\n                                    case 10:\n                                      _context90.next = 12;\n                                      return _this30._saveSession(Object.assign({\n                                        expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                                      }, data));\n\n                                    case 12:\n                                      _context90.next = 14;\n                                      return _this30._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n\n                                    case 14:\n                                      return _context90.abrupt(\"return\", {\n                                        data: data,\n                                        error: error\n                                      });\n\n                                    case 15:\n                                    case \"end\":\n                                      return _context90.stop();\n                                  }\n                                }\n                              }, _callee90);\n                            }));\n\n                            return function (_x60) {\n                              return _ref39.apply(this, arguments);\n                            };\n                          }());\n\n                        case 3:\n                          return _context91.abrupt(\"return\", _context91.sent);\n\n                        case 6:\n                          _context91.prev = 6;\n                          _context91.t0 = _context91[\"catch\"](0);\n\n                          if (!isAuthError(_context91.t0)) {\n                            _context91.next = 10;\n                            break;\n                          }\n\n                          return _context91.abrupt(\"return\", {\n                            data: null,\n                            error: _context91.t0\n                          });\n\n                        case 10:\n                          throw _context91.t0;\n\n                        case 11:\n                        case \"end\":\n                          return _context91.stop();\n                      }\n                    }\n                  }, _callee91, null, [[0, 6]]);\n                }))));\n\n              case 1:\n              case \"end\":\n                return _context92.stop();\n            }\n          }\n        }, _callee92, this);\n      }));\n\n      function _verify(_x59) {\n        return _verify2.apply(this, arguments);\n      }\n\n      return _verify;\n    }()\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n\n  }, {\n    key: \"_challenge\",\n    value: function () {\n      var _challenge2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee95(params) {\n        var _this31 = this;\n\n        return _regeneratorRuntime().wrap(function _callee95$(_context95) {\n          while (1) {\n            switch (_context95.prev = _context95.next) {\n              case 0:\n                return _context95.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee94() {\n                  return _regeneratorRuntime().wrap(function _callee94$(_context94) {\n                    while (1) {\n                      switch (_context94.prev = _context94.next) {\n                        case 0:\n                          _context94.prev = 0;\n                          _context94.next = 3;\n                          return _this31._useSession( /*#__PURE__*/function () {\n                            var _ref41 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee93(result) {\n                              var _a, sessionData, sessionError;\n\n                              return _regeneratorRuntime().wrap(function _callee93$(_context93) {\n                                while (1) {\n                                  switch (_context93.prev = _context93.next) {\n                                    case 0:\n                                      sessionData = result.data, sessionError = result.error;\n\n                                      if (!sessionError) {\n                                        _context93.next = 3;\n                                        break;\n                                      }\n\n                                      return _context93.abrupt(\"return\", {\n                                        data: null,\n                                        error: sessionError\n                                      });\n\n                                    case 3:\n                                      _context93.next = 5;\n                                      return _request(_this31.fetch, 'POST', \"\".concat(_this31.url, \"/factors/\").concat(params.factorId, \"/challenge\"), {\n                                        headers: _this31.headers,\n                                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                                      });\n\n                                    case 5:\n                                      return _context93.abrupt(\"return\", _context93.sent);\n\n                                    case 6:\n                                    case \"end\":\n                                      return _context93.stop();\n                                  }\n                                }\n                              }, _callee93);\n                            }));\n\n                            return function (_x62) {\n                              return _ref41.apply(this, arguments);\n                            };\n                          }());\n\n                        case 3:\n                          return _context94.abrupt(\"return\", _context94.sent);\n\n                        case 6:\n                          _context94.prev = 6;\n                          _context94.t0 = _context94[\"catch\"](0);\n\n                          if (!isAuthError(_context94.t0)) {\n                            _context94.next = 10;\n                            break;\n                          }\n\n                          return _context94.abrupt(\"return\", {\n                            data: null,\n                            error: _context94.t0\n                          });\n\n                        case 10:\n                          throw _context94.t0;\n\n                        case 11:\n                        case \"end\":\n                          return _context94.stop();\n                      }\n                    }\n                  }, _callee94, null, [[0, 6]]);\n                }))));\n\n              case 1:\n              case \"end\":\n                return _context95.stop();\n            }\n          }\n        }, _callee95, this);\n      }));\n\n      function _challenge(_x61) {\n        return _challenge2.apply(this, arguments);\n      }\n\n      return _challenge;\n    }()\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n\n  }, {\n    key: \"_challengeAndVerify\",\n    value: function () {\n      var _challengeAndVerify2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee96(params) {\n        var _yield$this$_challeng, challengeData, challengeError;\n\n        return _regeneratorRuntime().wrap(function _callee96$(_context96) {\n          while (1) {\n            switch (_context96.prev = _context96.next) {\n              case 0:\n                _context96.next = 2;\n                return this._challenge({\n                  factorId: params.factorId\n                });\n\n              case 2:\n                _yield$this$_challeng = _context96.sent;\n                challengeData = _yield$this$_challeng.data;\n                challengeError = _yield$this$_challeng.error;\n\n                if (!challengeError) {\n                  _context96.next = 7;\n                  break;\n                }\n\n                return _context96.abrupt(\"return\", {\n                  data: null,\n                  error: challengeError\n                });\n\n              case 7:\n                _context96.next = 9;\n                return this._verify({\n                  factorId: params.factorId,\n                  challengeId: challengeData.id,\n                  code: params.code\n                });\n\n              case 9:\n                return _context96.abrupt(\"return\", _context96.sent);\n\n              case 10:\n              case \"end\":\n                return _context96.stop();\n            }\n          }\n        }, _callee96, this);\n      }));\n\n      function _challengeAndVerify(_x63) {\n        return _challengeAndVerify2.apply(this, arguments);\n      }\n\n      return _challengeAndVerify;\n    }()\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n\n  }, {\n    key: \"_listFactors\",\n    value: function () {\n      var _listFactors2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee97() {\n        var _yield$this$getUser2, user, userError, factors, totp;\n\n        return _regeneratorRuntime().wrap(function _callee97$(_context97) {\n          while (1) {\n            switch (_context97.prev = _context97.next) {\n              case 0:\n                _context97.next = 2;\n                return this.getUser();\n\n              case 2:\n                _yield$this$getUser2 = _context97.sent;\n                user = _yield$this$getUser2.data.user;\n                userError = _yield$this$getUser2.error;\n\n                if (!userError) {\n                  _context97.next = 7;\n                  break;\n                }\n\n                return _context97.abrupt(\"return\", {\n                  data: null,\n                  error: userError\n                });\n\n              case 7:\n                factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n                totp = factors.filter(function (factor) {\n                  return factor.factor_type === 'totp' && factor.status === 'verified';\n                });\n                return _context97.abrupt(\"return\", {\n                  data: {\n                    all: factors,\n                    totp: totp\n                  },\n                  error: null\n                });\n\n              case 10:\n              case \"end\":\n                return _context97.stop();\n            }\n          }\n        }, _callee97, this);\n      }));\n\n      function _listFactors() {\n        return _listFactors2.apply(this, arguments);\n      }\n\n      return _listFactors;\n    }()\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n\n  }, {\n    key: \"_getAuthenticatorAssuranceLevel\",\n    value: function () {\n      var _getAuthenticatorAssuranceLevel2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee100() {\n        var _this32 = this;\n\n        return _regeneratorRuntime().wrap(function _callee100$(_context100) {\n          while (1) {\n            switch (_context100.prev = _context100.next) {\n              case 0:\n                return _context100.abrupt(\"return\", this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee99() {\n                  return _regeneratorRuntime().wrap(function _callee99$(_context99) {\n                    while (1) {\n                      switch (_context99.prev = _context99.next) {\n                        case 0:\n                          _context99.next = 2;\n                          return _this32._useSession( /*#__PURE__*/function () {\n                            var _ref43 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee98(result) {\n                              var _a, _b, session, sessionError, payload, currentLevel, nextLevel, verifiedFactors, currentAuthenticationMethods;\n\n                              return _regeneratorRuntime().wrap(function _callee98$(_context98) {\n                                while (1) {\n                                  switch (_context98.prev = _context98.next) {\n                                    case 0:\n                                      session = result.data.session, sessionError = result.error;\n\n                                      if (!sessionError) {\n                                        _context98.next = 3;\n                                        break;\n                                      }\n\n                                      return _context98.abrupt(\"return\", {\n                                        data: null,\n                                        error: sessionError\n                                      });\n\n                                    case 3:\n                                      if (session) {\n                                        _context98.next = 5;\n                                        break;\n                                      }\n\n                                      return _context98.abrupt(\"return\", {\n                                        data: {\n                                          currentLevel: null,\n                                          nextLevel: null,\n                                          currentAuthenticationMethods: []\n                                        },\n                                        error: null\n                                      });\n\n                                    case 5:\n                                      payload = _this32._decodeJWT(session.access_token);\n                                      currentLevel = null;\n\n                                      if (payload.aal) {\n                                        currentLevel = payload.aal;\n                                      }\n\n                                      nextLevel = currentLevel;\n                                      verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(function (factor) {\n                                        return factor.status === 'verified';\n                                      })) !== null && _b !== void 0 ? _b : [];\n\n                                      if (verifiedFactors.length > 0) {\n                                        nextLevel = 'aal2';\n                                      }\n\n                                      currentAuthenticationMethods = payload.amr || [];\n                                      return _context98.abrupt(\"return\", {\n                                        data: {\n                                          currentLevel: currentLevel,\n                                          nextLevel: nextLevel,\n                                          currentAuthenticationMethods: currentAuthenticationMethods\n                                        },\n                                        error: null\n                                      });\n\n                                    case 13:\n                                    case \"end\":\n                                      return _context98.stop();\n                                  }\n                                }\n                              }, _callee98);\n                            }));\n\n                            return function (_x64) {\n                              return _ref43.apply(this, arguments);\n                            };\n                          }());\n\n                        case 2:\n                          return _context99.abrupt(\"return\", _context99.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context99.stop();\n                      }\n                    }\n                  }, _callee99);\n                }))));\n\n              case 1:\n              case \"end\":\n                return _context100.stop();\n            }\n          }\n        }, _callee100, this);\n      }));\n\n      function _getAuthenticatorAssuranceLevel() {\n        return _getAuthenticatorAssuranceLevel2.apply(this, arguments);\n      }\n\n      return _getAuthenticatorAssuranceLevel;\n    }()\n  }]);\n\n  return GoTrueClient;\n}();\n\nexport { GoTrueClient as default };\nGoTrueClient.nextInstanceID = 0;","map":{"version":3,"mappings":"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","names":["GoTrueAdminApi","DEFAULT_HEADERS","EXPIRY_MARGIN","GOTRUE_URL","STORAGE_KEY","AuthImplicitGrantRedirectError","AuthPKCEGrantCodeExchangeError","AuthInvalidCredentialsError","AuthSessionMissingError","AuthInvalidTokenResponseError","AuthUnknownError","isAuthApiError","isAuthError","isAuthRetryableFetchError","_request","_sessionResponse","_sessionResponsePassword","_userResponse","_ssoResponse","decodeJWTPayload","Deferred","getItemAsync","isBrowser","removeItemAsync","resolveFetch","setItemAsync","uuid","retryable","sleep","supportsLocalStorage","parseParametersFromURL","getCodeChallengeAndMethod","localStorageAdapter","memoryLocalStorageAdapter","polyfillGlobalThis","version","LockAcquireTimeoutError","navigatorLock","DEFAULT_OPTIONS","url","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","headers","flowType","debug","hasCustomAuthorizationHeader","AUTO_REFRESH_TICK_DURATION","AUTO_REFRESH_TICK_THRESHOLD","lockNoOp","name","acquireTimeout","fn","GoTrueClient","options","Map","console","log","instanceID","nextInstanceID","warn","settings","logDebugMessages","logger","admin","fetch","lock","navigator","_a","locks","mfa","verify","_verify","bind","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","listFactors","_listFactors","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","storage","memoryStorage","globalThis","BroadcastChannel","broadcastChannel","e","error","_b","addEventListener","event","_debug","_notifyAllSubscribers","data","session","initialize","args","Date","toISOString","initializePromise","_acquireLock","_initialize","_isPKCEFlow","isPKCEFlow","_isImplicitGrantFlow","_getSessionFromURL","message","_removeSession","redirectType","_saveSession","setTimeout","_recoverAndRefresh","_handleVisibilityChange","credentials","body","gotrue_meta_security","captcha_token","_c","captchaToken","xform","res","user","email","password","codeChallenge","codeChallengeMethod","redirectTo","emailRedirectTo","code_challenge","code_challenge_method","phone","channel","weak_password","weakPassword","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","_d","authCode","_exchangeCodeForSession","storageItem","split","codeVerifier","auth_code","code_verifier","token","access_token","nonce","id_token","create_user","shouldCreateUser","_e","messageId","message_id","params","undefined","Error","type","provider_id","providerId","domain","redirect_to","skip_http_redirect","_reauthenticate","_useSession","result","sessionError","jwt","endpoint","lockAcquired","last","pendingInLock","length","Promise","resolve","push","waitOn","all","splice","__loadSession","stack","currentSession","maybeSession","_isValidSession","hasExpired","expires_at","now","isServer","suppressWarning","suppressGetSessionWarning","proxySession","Proxy","get","target","prop","receiver","Reflect","_callRefreshToken","refresh_token","_getUser","attributes","_updateUser","sessionData","userError","_setSession","timeNow","expiresAt","payload","exp","refreshedSession","token_type","expires_in","_refreshSession","window","location","href","code","URL","searchParams","delete","history","replaceState","state","toString","error_description","error_code","provider_token","provider_refresh_token","Math","round","expiresIn","parseInt","actuallyExpiresIn","issuedAt","hash","currentStorageContent","scope","_signOut","accessToken","signOut","status","callback","id","subscription","unsubscribe","stateChangeEmitters","set","_emitInitialSession","getUser","identities","_getUrlForProvider","assign","identity","identity_id","refreshToken","debugName","substring","startedAt","attempt","pow","nextBackOffInterval","isValidSession","expiresWithMargin","Infinity","refreshingDeferred","promise","_refreshAccessToken","reject","broadcast","postMessage","errors","promises","Array","from","values","map","x","i","visibilityChangedCallback","removeEventListener","_stopAutoRefresh","ticker","setInterval","_autoRefreshTokenTick","autoRefreshTicker","unref","Deno","unrefTimer","clearInterval","_removeVisibilityChangedCallback","_startAutoRefresh","expiresInTicks","floor","isAcquireTimeout","startAutoRefresh","_onVisibilityChanged","calledFromInitialize","methodName","document","visibilityState","urlParams","encodeURIComponent","flowParams","URLSearchParams","query","join","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","Object","challengeData","challengeError","factors","filter","factor","currentLevel","nextLevel","currentAuthenticationMethods","_decodeJWT","aal","verifiedFactors","amr"],"sources":["/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@supabase/auth-js/src/GoTrueClient.ts"],"sourcesContent":["import GoTrueAdminApi from './GoTrueAdminApi'\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants'\nimport {\n  AuthError,\n  AuthImplicitGrantRedirectError,\n  AuthPKCEGrantCodeExchangeError,\n  AuthInvalidCredentialsError,\n  AuthSessionMissingError,\n  AuthInvalidTokenResponseError,\n  AuthUnknownError,\n  isAuthApiError,\n  isAuthError,\n  isAuthRetryableFetchError,\n} from './lib/errors'\nimport {\n  Fetch,\n  _request,\n  _sessionResponse,\n  _sessionResponsePassword,\n  _userResponse,\n  _ssoResponse,\n} from './lib/fetch'\nimport {\n  decodeJWTPayload,\n  Deferred,\n  getItemAsync,\n  isBrowser,\n  removeItemAsync,\n  resolveFetch,\n  setItemAsync,\n  uuid,\n  retryable,\n  sleep,\n  supportsLocalStorage,\n  parseParametersFromURL,\n  getCodeChallengeAndMethod,\n} from './lib/helpers'\nimport { localStorageAdapter, memoryLocalStorageAdapter } from './lib/local-storage'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport { version } from './lib/version'\nimport { LockAcquireTimeoutError, navigatorLock } from './lib/locks'\n\nimport type {\n  AuthChangeEvent,\n  AuthResponse,\n  AuthResponsePassword,\n  AuthTokenResponse,\n  AuthTokenResponsePassword,\n  AuthOtpResponse,\n  CallRefreshTokenResult,\n  GoTrueClientOptions,\n  InitializeResult,\n  OAuthResponse,\n  SSOResponse,\n  Provider,\n  Session,\n  SignInWithIdTokenCredentials,\n  SignInWithOAuthCredentials,\n  SignInWithPasswordCredentials,\n  SignInWithPasswordlessCredentials,\n  SignUpWithPasswordCredentials,\n  SignInWithSSO,\n  SignOut,\n  Subscription,\n  SupportedStorage,\n  User,\n  UserAttributes,\n  UserResponse,\n  VerifyOtpParams,\n  GoTrueMFAApi,\n  MFAEnrollParams,\n  AuthMFAEnrollResponse,\n  MFAChallengeParams,\n  AuthMFAChallengeResponse,\n  MFAUnenrollParams,\n  AuthMFAUnenrollResponse,\n  MFAVerifyParams,\n  AuthMFAVerifyResponse,\n  AuthMFAListFactorsResponse,\n  AMREntry,\n  AuthMFAGetAuthenticatorAssuranceLevelResponse,\n  AuthenticatorAssuranceLevels,\n  Factor,\n  MFAChallengeAndVerifyParams,\n  ResendParams,\n  AuthFlowType,\n  LockFunc,\n  UserIdentity,\n  SignInAnonymouslyCredentials,\n} from './lib/types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS: Omit<Required<GoTrueClientOptions>, 'fetch' | 'storage' | 'lock'> = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n  flowType: 'implicit',\n  debug: false,\n  hasCustomAuthorizationHeader: false,\n}\n\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000\n\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3\n\nasync function lockNoOp<R>(name: string, acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n  return await fn()\n}\n\nexport default class GoTrueClient {\n  private static nextInstanceID = 0\n\n  private instanceID: number\n\n  /**\n   * Namespace for the GoTrue admin methods.\n   * These methods should only be used in a trusted server-side environment.\n   */\n  admin: GoTrueAdminApi\n  /**\n   * Namespace for the MFA methods.\n   */\n  mfa: GoTrueMFAApi\n  /**\n   * The storage key used to identify the values saved in localStorage\n   */\n  protected storageKey: string\n\n  protected flowType: AuthFlowType\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected storage: SupportedStorage\n  protected memoryStorage: { [key: string]: string } | null = null\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected autoRefreshTicker: ReturnType<typeof setInterval> | null = null\n  protected visibilityChangedCallback: (() => Promise<any>) | null = null\n  protected refreshingDeferred: Deferred<CallRefreshTokenResult> | null = null\n  /**\n   * Keeps track of the async client initialization.\n   * When null or not yet resolved the auth state is `unknown`\n   * Once resolved the the auth state is known and it's save to call any further client methods.\n   * Keep extra care to never reject or throw uncaught errors\n   */\n  protected initializePromise: Promise<InitializeResult> | null = null\n  protected detectSessionInUrl = true\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected hasCustomAuthorizationHeader = false\n  protected suppressGetSessionWarning = false\n  protected fetch: Fetch\n  protected lock: LockFunc\n  protected lockAcquired = false\n  protected pendingInLock: Promise<any>[] = []\n\n  /**\n   * Used to broadcast state change events to other tabs listening.\n   */\n  protected broadcastChannel: BroadcastChannel | null = null\n\n  protected logDebugMessages: boolean\n  protected logger: (message: string, ...args: any[]) => void = console.log\n\n  /**\n   * Create a new client for use in the browser.\n   */\n  constructor(options: GoTrueClientOptions) {\n    this.instanceID = GoTrueClient.nextInstanceID\n    GoTrueClient.nextInstanceID += 1\n\n    if (this.instanceID > 0 && isBrowser()) {\n      console.warn(\n        'Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.'\n      )\n    }\n\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n\n    this.logDebugMessages = !!settings.debug\n    if (typeof settings.debug === 'function') {\n      this.logger = settings.debug\n    }\n\n    this.persistSession = settings.persistSession\n    this.storageKey = settings.storageKey\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch,\n    })\n\n    this.url = settings.url\n    this.headers = settings.headers\n    this.fetch = resolveFetch(settings.fetch)\n    this.lock = settings.lock || lockNoOp\n    this.detectSessionInUrl = settings.detectSessionInUrl\n    this.flowType = settings.flowType\n    this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader\n\n    if (settings.lock) {\n      this.lock = settings.lock\n    } else if (isBrowser() && globalThis?.navigator?.locks) {\n      this.lock = navigatorLock\n    } else {\n      this.lock = lockNoOp\n    }\n\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n    }\n\n    if (this.persistSession) {\n      if (settings.storage) {\n        this.storage = settings.storage\n      } else {\n        if (supportsLocalStorage()) {\n          this.storage = localStorageAdapter\n        } else {\n          this.memoryStorage = {}\n          this.storage = memoryLocalStorageAdapter(this.memoryStorage)\n        }\n      }\n    } else {\n      this.memoryStorage = {}\n      this.storage = memoryLocalStorageAdapter(this.memoryStorage)\n    }\n\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      try {\n        this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey)\n      } catch (e: any) {\n        console.error(\n          'Failed to create a new BroadcastChannel, multi-tab state changes will not be available',\n          e\n        )\n      }\n\n      this.broadcastChannel?.addEventListener('message', async (event) => {\n        this._debug('received broadcast notification from other tab or client', event)\n\n        await this._notifyAllSubscribers(event.data.event, event.data.session, false) // broadcast = false so we don't get an endless loop of messages\n      })\n    }\n\n    this.initialize()\n  }\n\n  private _debug(...args: any[]): GoTrueClient {\n    if (this.logDebugMessages) {\n      this.logger(\n        `GoTrueClient@${this.instanceID} (${version}) ${new Date().toISOString()}`,\n        ...args\n      )\n    }\n\n    return this\n  }\n\n  /**\n   * Initializes the client session either from the url or from storage.\n   * This method is automatically called when instantiating the client, but should also be called\n   * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n   */\n  async initialize(): Promise<InitializeResult> {\n    if (this.initializePromise) {\n      return await this.initializePromise\n    }\n\n    this.initializePromise = (async () => {\n      return await this._acquireLock(-1, async () => {\n        return await this._initialize()\n      })\n    })()\n\n    return await this.initializePromise\n  }\n\n  /**\n   * IMPORTANT:\n   * 1. Never throw in this method, as it is called from the constructor\n   * 2. Never return a session from this method as it would be cached over\n   *    the whole lifetime of the client\n   */\n  private async _initialize(): Promise<InitializeResult> {\n    try {\n      const isPKCEFlow = isBrowser() ? await this._isPKCEFlow() : false\n      this._debug('#_initialize()', 'begin', 'is PKCE flow', isPKCEFlow)\n\n      if (isPKCEFlow || (this.detectSessionInUrl && this._isImplicitGrantFlow())) {\n        const { data, error } = await this._getSessionFromURL(isPKCEFlow)\n        if (error) {\n          this._debug('#_initialize()', 'error detecting session from URL', error)\n\n          // hacky workaround to keep the existing session if there's an error returned from identity linking\n          // TODO: once error codes are ready, we should match against it instead of the message\n          if (\n            error?.message === 'Identity is already linked' ||\n            error?.message === 'Identity is already linked to another user'\n          ) {\n            return { error }\n          }\n\n          // failed login attempt via url,\n          // remove old session as in verifyOtp, signUp and signInWith*\n          await this._removeSession()\n\n          return { error }\n        }\n\n        const { session, redirectType } = data\n\n        this._debug(\n          '#_initialize()',\n          'detected session in URL',\n          session,\n          'redirect type',\n          redirectType\n        )\n\n        await this._saveSession(session)\n\n        setTimeout(async () => {\n          if (redirectType === 'recovery') {\n            await this._notifyAllSubscribers('PASSWORD_RECOVERY', session)\n          } else {\n            await this._notifyAllSubscribers('SIGNED_IN', session)\n          }\n        }, 0)\n\n        return { error: null }\n      }\n      // no login attempt via callback url try to recover session from storage\n      await this._recoverAndRefresh()\n      return { error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { error }\n      }\n\n      return {\n        error: new AuthUnknownError('Unexpected error during initialization', error),\n      }\n    } finally {\n      await this._handleVisibilityChange()\n      this._debug('#_initialize()', 'end')\n    }\n  }\n\n  /**\n   * Creates a new anonymous user.\n   *\n   * @returns A session where the is_anonymous claim in the access token JWT set to true\n   */\n  async signInAnonymously(credentials?: SignInAnonymouslyCredentials): Promise<AuthResponse> {\n    try {\n      const res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n        headers: this.headers,\n        body: {\n          data: credentials?.options?.data ?? {},\n          gotrue_meta_security: { captcha_token: credentials?.options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a new user.\n   *\n   * Be aware that if a user account exists in the system you may get back an\n   * error message that attempts to hide this information from the user.\n   * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUp(credentials: SignUpWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n            this.storage,\n            this.storageKey\n          )\n        }\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            channel: options?.channel ?? 'sms',\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user with an email and password or phone and password.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or that the\n   * email/phone and password combination is wrong or that the account can only\n   * be accessed via social login.\n   */\n  async signInWithPassword(\n    credentials: SignInWithPasswordCredentials\n  ): Promise<AuthTokenResponsePassword> {\n    try {\n      let res: AuthResponsePassword\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            email,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponsePassword,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponsePassword,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n      const { data, error } = res\n\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return {\n        data: {\n          user: data.user,\n          session: data.session,\n          ...(data.weak_password ? { weakPassword: data.weak_password } : null),\n        },\n        error,\n      }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user via a third-party provider.\n   * This method supports the PKCE flow.\n   */\n  async signInWithOAuth(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    return await this._handleProviderSignIn(credentials.provider, {\n      redirectTo: credentials.options?.redirectTo,\n      scopes: credentials.options?.scopes,\n      queryParams: credentials.options?.queryParams,\n      skipBrowserRedirect: credentials.options?.skipBrowserRedirect,\n    })\n  }\n\n  /**\n   * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n   */\n  async exchangeCodeForSession(authCode: string): Promise<AuthTokenResponse> {\n    await this.initializePromise\n\n    return this._acquireLock(-1, async () => {\n      return this._exchangeCodeForSession(authCode)\n    })\n  }\n\n  private async _exchangeCodeForSession(authCode: string): Promise<\n    | {\n        data: { session: Session; user: User; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; user: null; redirectType: null }; error: AuthError }\n  > {\n    const storageItem = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    const [codeVerifier, redirectType] = ((storageItem ?? '') as string).split('/')\n    const { data, error } = await _request(\n      this.fetch,\n      'POST',\n      `${this.url}/token?grant_type=pkce`,\n      {\n        headers: this.headers,\n        body: {\n          auth_code: authCode,\n          code_verifier: codeVerifier,\n        },\n        xform: _sessionResponse,\n      }\n    )\n    await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n    if (error) {\n      return { data: { user: null, session: null, redirectType: null }, error }\n    } else if (!data || !data.session || !data.user) {\n      return {\n        data: { user: null, session: null, redirectType: null },\n        error: new AuthInvalidTokenResponseError(),\n      }\n    }\n    if (data.session) {\n      await this._saveSession(data.session)\n      await this._notifyAllSubscribers('SIGNED_IN', data.session)\n    }\n    return { data: { ...data, redirectType: redirectType ?? null }, error }\n  }\n\n  /**\n   * Allows signing in with an OIDC ID token. The authentication provider used\n   * should be enabled and configured.\n   */\n  async signInWithIdToken(credentials: SignInWithIdTokenCredentials): Promise<AuthTokenResponse> {\n    try {\n      const { options, provider, token, access_token, nonce } = credentials\n\n      const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n        headers: this.headers,\n        body: {\n          provider,\n          id_token: token,\n          access_token,\n          nonce,\n          gotrue_meta_security: { captcha_token: options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n\n      const { data, error } = res\n      if (error) {\n        return { data: { user: null, session: null }, error }\n      } else if (!data || !data.session || !data.user) {\n        return {\n          data: { user: null, session: null },\n          error: new AuthInvalidTokenResponseError(),\n        }\n      }\n      if (data.session) {\n        await this._saveSession(data.session)\n        await this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user using magiclink or a one-time password (OTP).\n   *\n   * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n   * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n   * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or, that the account\n   * can only be accessed via social login.\n   *\n   * Do note that you will need to configure a Whatsapp sender on Twilio\n   * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n   * channel is not supported on other providers\n   * at this time.\n   * This method supports PKCE when an email is passed.\n   */\n  async signInWithOtp(credentials: SignInWithPasswordlessCredentials): Promise<AuthOtpResponse> {\n    try {\n      if ('email' in credentials) {\n        const { email, options } = credentials\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce') {\n          ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n            this.storage,\n            this.storageKey\n          )\n        }\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            email,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      if ('phone' in credentials) {\n        const { phone, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            phone,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n            channel: options?.channel ?? 'sms',\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError('You must provide either an email or phone number.')\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n   */\n  async verifyOtp(params: VerifyOtpParams): Promise<AuthResponse> {\n    try {\n      let redirectTo: string | undefined = undefined\n      let captchaToken: string | undefined = undefined\n      if ('options' in params) {\n        redirectTo = params.options?.redirectTo\n        captchaToken = params.options?.captchaToken\n      }\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n        headers: this.headers,\n        body: {\n          ...params,\n          gotrue_meta_security: { captcha_token: captchaToken },\n        },\n        redirectTo,\n        xform: _sessionResponse,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw new Error('An error occurred on token verification.')\n      }\n\n      const session: Session | null = data.session\n      const user: User = data.user\n\n      if (session?.access_token) {\n        await this._saveSession(session as Session)\n        await this._notifyAllSubscribers(\n          params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN',\n          session\n        )\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Attempts a single-sign on using an enterprise Identity Provider. A\n   * successful SSO attempt will redirect the current page to the identity\n   * provider authorization page. The redirect URL is implementation and SSO\n   * protocol specific.\n   *\n   * You can use it by providing a SSO domain. Typically you can extract this\n   * domain by asking users for their email address. If this domain is\n   * registered on the Auth instance the redirect will use that organization's\n   * currently active SSO Identity Provider for the login.\n   *\n   * If you have built an organization-specific login page, you can use the\n   * organization's SSO Identity Provider UUID directly instead.\n   */\n  async signInWithSSO(params: SignInWithSSO): Promise<SSOResponse> {\n    try {\n      let codeChallenge: string | null = null\n      let codeChallengeMethod: string | null = null\n      if (this.flowType === 'pkce') {\n        ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n          this.storage,\n          this.storageKey\n        )\n      }\n\n      return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n        body: {\n          ...('providerId' in params ? { provider_id: params.providerId } : null),\n          ...('domain' in params ? { domain: params.domain } : null),\n          redirect_to: params.options?.redirectTo ?? undefined,\n          ...(params?.options?.captchaToken\n            ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n            : null),\n          skip_http_redirect: true, // fetch does not handle redirects\n          code_challenge: codeChallenge,\n          code_challenge_method: codeChallengeMethod,\n        },\n        headers: this.headers,\n        xform: _ssoResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Sends a reauthentication OTP to the user's email or phone number.\n   * Requires the user to be signed-in.\n   */\n  async reauthenticate(): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._reauthenticate()\n    })\n  }\n\n  private async _reauthenticate(): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const {\n          data: { session },\n          error: sessionError,\n        } = result\n        if (sessionError) throw sessionError\n        if (!session) throw new AuthSessionMissingError()\n\n        const { error } = await _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n          headers: this.headers,\n          jwt: session.access_token,\n        })\n        return { data: { user: null, session: null }, error }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n   */\n  async resend(credentials: ResendParams): Promise<AuthOtpResponse> {\n    try {\n      const endpoint = `${this.url}/resend`\n      if ('email' in credentials) {\n        const { email, type, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            email,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      } else if ('phone' in credentials) {\n        const { phone, type, options } = credentials\n        const { data, error } = await _request(this.fetch, 'POST', endpoint, {\n          headers: this.headers,\n          body: {\n            phone,\n            type,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n        })\n        return { data: { user: null, session: null, messageId: data?.message_id }, error }\n      }\n      throw new AuthInvalidCredentialsError(\n        'You must provide either an email or phone number and a type'\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Returns the session, refreshing it if necessary.\n   *\n   * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n   *\n   * **IMPORTANT:** This method loads values directly from the storage attached\n   * to the client. If that storage is based on request cookies for example,\n   * the values in it may not be authentic and therefore it's strongly advised\n   * against using this method and its results in such circumstances. A warning\n   * will be emitted if this is detected. Use {@link #getUser()} instead.\n   */\n  async getSession() {\n    await this.initializePromise\n\n    const result = await this._acquireLock(-1, async () => {\n      return this._useSession(async (result) => {\n        return result\n      })\n    })\n\n    return result\n  }\n\n  /**\n   * Acquires a global lock based on the storage key.\n   */\n  private async _acquireLock<R>(acquireTimeout: number, fn: () => Promise<R>): Promise<R> {\n    this._debug('#_acquireLock', 'begin', acquireTimeout)\n\n    try {\n      if (this.lockAcquired) {\n        const last = this.pendingInLock.length\n          ? this.pendingInLock[this.pendingInLock.length - 1]\n          : Promise.resolve()\n\n        const result = (async () => {\n          await last\n          return await fn()\n        })()\n\n        this.pendingInLock.push(\n          (async () => {\n            try {\n              await result\n            } catch (e: any) {\n              // we just care if it finished\n            }\n          })()\n        )\n\n        return result\n      }\n\n      return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {\n        this._debug('#_acquireLock', 'lock acquired for storage key', this.storageKey)\n\n        try {\n          this.lockAcquired = true\n\n          const result = fn()\n\n          this.pendingInLock.push(\n            (async () => {\n              try {\n                await result\n              } catch (e: any) {\n                // we just care if it finished\n              }\n            })()\n          )\n\n          await result\n\n          // keep draining the queue until there's nothing to wait on\n          while (this.pendingInLock.length) {\n            const waitOn = [...this.pendingInLock]\n\n            await Promise.all(waitOn)\n\n            this.pendingInLock.splice(0, waitOn.length)\n          }\n\n          return await result\n        } finally {\n          this._debug('#_acquireLock', 'lock released for storage key', this.storageKey)\n\n          this.lockAcquired = false\n        }\n      })\n    } finally {\n      this._debug('#_acquireLock', 'end')\n    }\n  }\n\n  /**\n   * Use instead of {@link #getSession} inside the library. It is\n   * semantically usually what you want, as getting a session involves some\n   * processing afterwards that requires only one client operating on the\n   * session at once across multiple tabs or processes.\n   */\n  private async _useSession<R>(\n    fn: (\n      result:\n        | {\n            data: {\n              session: Session\n            }\n            error: null\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: AuthError\n          }\n        | {\n            data: {\n              session: null\n            }\n            error: null\n          }\n    ) => Promise<R>\n  ): Promise<R> {\n    this._debug('#_useSession', 'begin')\n\n    try {\n      // the use of __loadSession here is the only correct use of the function!\n      const result = await this.__loadSession()\n\n      return await fn(result)\n    } finally {\n      this._debug('#_useSession', 'end')\n    }\n  }\n\n  /**\n   * NEVER USE DIRECTLY!\n   *\n   * Always use {@link #_useSession}.\n   */\n  private async __loadSession(): Promise<\n    | {\n        data: {\n          session: Session\n        }\n        error: null\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: AuthError\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: null\n      }\n  > {\n    this._debug('#__loadSession()', 'begin')\n\n    if (!this.lockAcquired) {\n      this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack)\n    }\n\n    try {\n      let currentSession: Session | null = null\n\n      const maybeSession = await getItemAsync(this.storage, this.storageKey)\n\n      this._debug('#getSession()', 'session from storage', maybeSession)\n\n      if (maybeSession !== null) {\n        if (this._isValidSession(maybeSession)) {\n          currentSession = maybeSession\n        } else {\n          this._debug('#getSession()', 'session from storage is not valid')\n          await this._removeSession()\n        }\n      }\n\n      if (!currentSession) {\n        return { data: { session: null }, error: null }\n      }\n\n      const hasExpired = currentSession.expires_at\n        ? currentSession.expires_at <= Date.now() / 1000\n        : false\n\n      this._debug(\n        '#__loadSession()',\n        `session has${hasExpired ? '' : ' not'} expired`,\n        'expires_at',\n        currentSession.expires_at\n      )\n\n      if (!hasExpired) {\n        if (this.storage.isServer) {\n          let suppressWarning = this.suppressGetSessionWarning\n          const proxySession: Session = new Proxy(currentSession, {\n            get: (target: any, prop: string, receiver: any) => {\n              if (!suppressWarning && prop === 'user') {\n                // only show warning when the user object is being accessed from the server\n                console.warn(\n                  'Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.'\n                )\n                suppressWarning = true // keeps this proxy instance from logging additional warnings\n                this.suppressGetSessionWarning = true // keeps this client's future proxy instances from warning\n              }\n              return Reflect.get(target, prop, receiver)\n            },\n          })\n          currentSession = proxySession\n        }\n\n        return { data: { session: currentSession }, error: null }\n      }\n\n      const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n      if (error) {\n        return { data: { session: null }, error }\n      }\n\n      return { data: { session }, error: null }\n    } finally {\n      this._debug('#__loadSession()', 'end')\n    }\n  }\n\n  /**\n   * Gets the current user details if there is an existing session. This method\n   * performs a network request to the Supabase Auth server, so the returned\n   * value is authentic and can be used to base authorization rules on.\n   *\n   * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n   */\n  async getUser(jwt?: string): Promise<UserResponse> {\n    if (jwt) {\n      return await this._getUser(jwt)\n    }\n\n    await this.initializePromise\n\n    const result = await this._acquireLock(-1, async () => {\n      return await this._getUser()\n    })\n\n    return result\n  }\n\n  private async _getUser(jwt?: string): Promise<UserResponse> {\n    try {\n      if (jwt) {\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: jwt,\n          xform: _userResponse,\n        })\n      }\n\n      return await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) {\n          throw error\n        }\n\n        // returns an error if there is no access_token or custom authorization header\n        if (!data.session?.access_token && !this.hasCustomAuthorizationHeader) {\n          return { data: { user: null }, error: new AuthSessionMissingError() }\n        }\n\n        return await _request(this.fetch, 'GET', `${this.url}/user`, {\n          headers: this.headers,\n          jwt: data.session?.access_token ?? undefined,\n          xform: _userResponse,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates user data for a logged in user.\n   */\n  async updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._updateUser(attributes, options)\n    })\n  }\n\n  protected async _updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          throw sessionError\n        }\n        if (!sessionData.session) {\n          throw new AuthSessionMissingError()\n        }\n        const session: Session = sessionData.session\n        let codeChallenge: string | null = null\n        let codeChallengeMethod: string | null = null\n        if (this.flowType === 'pkce' && attributes.email != null) {\n          ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n            this.storage,\n            this.storageKey\n          )\n        }\n\n        const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            ...attributes,\n            code_challenge: codeChallenge,\n            code_challenge_method: codeChallengeMethod,\n          },\n          jwt: session.access_token,\n          xform: _userResponse,\n        })\n        if (userError) throw userError\n        session.user = data.user as User\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('USER_UPDATED', session)\n        return { data: { user: session.user }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Decodes a JWT (without performing any validation).\n   */\n  private _decodeJWT(jwt: string): {\n    exp?: number\n    aal?: AuthenticatorAssuranceLevels | null\n    amr?: AMREntry[] | null\n  } {\n    return decodeJWTPayload(jwt)\n  }\n\n  /**\n   * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n   * If the refresh token or access token in the current session is invalid, an error will be thrown.\n   * @param currentSession The current session that minimally contains an access token and refresh token.\n   */\n  async setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._setSession(currentSession)\n    })\n  }\n\n  protected async _setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      if (!currentSession.access_token || !currentSession.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const timeNow = Date.now() / 1000\n      let expiresAt = timeNow\n      let hasExpired = true\n      let session: Session | null = null\n      const payload = decodeJWTPayload(currentSession.access_token)\n      if (payload.exp) {\n        expiresAt = payload.exp\n        hasExpired = expiresAt <= timeNow\n      }\n\n      if (hasExpired) {\n        const { session: refreshedSession, error } = await this._callRefreshToken(\n          currentSession.refresh_token\n        )\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!refreshedSession) {\n          return { data: { user: null, session: null }, error: null }\n        }\n        session = refreshedSession\n      } else {\n        const { data, error } = await this._getUser(currentSession.access_token)\n        if (error) {\n          throw error\n        }\n        session = {\n          access_token: currentSession.access_token,\n          refresh_token: currentSession.refresh_token,\n          user: data.user,\n          token_type: 'bearer',\n          expires_in: expiresAt - timeNow,\n          expires_at: expiresAt,\n        }\n        await this._saveSession(session)\n        await this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Returns a new session, regardless of expiry status.\n   * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n   * If the current session's refresh token is invalid, an error will be thrown.\n   * @param currentSession The current session. If passed in, it must contain a refresh token.\n   */\n  async refreshSession(currentSession?: { refresh_token: string }): Promise<AuthResponse> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._refreshSession(currentSession)\n    })\n  }\n\n  protected async _refreshSession(currentSession?: {\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        if (!currentSession) {\n          const { data, error } = result\n          if (error) {\n            throw error\n          }\n\n          currentSession = data.session ?? undefined\n        }\n\n        if (!currentSession?.refresh_token) {\n          throw new AuthSessionMissingError()\n        }\n\n        const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!session) {\n          return { data: { user: null, session: null }, error: null }\n        }\n\n        return { data: { user: session.user, session }, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets the session data from a URL string\n   */\n  private async _getSessionFromURL(isPKCEFlow: boolean): Promise<\n    | {\n        data: { session: Session; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; redirectType: null }; error: AuthError }\n  > {\n    try {\n      if (!isBrowser()) throw new AuthImplicitGrantRedirectError('No browser detected.')\n      if (this.flowType === 'implicit' && !this._isImplicitGrantFlow()) {\n        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.')\n      } else if (this.flowType == 'pkce' && !isPKCEFlow) {\n        throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.')\n      }\n\n      const params = parseParametersFromURL(window.location.href)\n\n      if (isPKCEFlow) {\n        if (!params.code) throw new AuthPKCEGrantCodeExchangeError('No code detected.')\n        const { data, error } = await this._exchangeCodeForSession(params.code)\n        if (error) throw error\n\n        const url = new URL(window.location.href)\n        url.searchParams.delete('code')\n\n        window.history.replaceState(window.history.state, '', url.toString())\n\n        return { data: { session: data.session, redirectType: null }, error: null }\n      }\n\n      if (params.error || params.error_description || params.error_code) {\n        throw new AuthImplicitGrantRedirectError(\n          params.error_description || 'Error in URL with unspecified error_description',\n          {\n            error: params.error || 'unspecified_error',\n            code: params.error_code || 'unspecified_code',\n          }\n        )\n      }\n\n      const {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        refresh_token,\n        expires_in,\n        expires_at,\n        token_type,\n      } = params\n\n      if (!access_token || !expires_in || !refresh_token || !token_type) {\n        throw new AuthImplicitGrantRedirectError('No session defined in URL')\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresIn = parseInt(expires_in)\n      let expiresAt = timeNow + expiresIn\n\n      if (expires_at) {\n        expiresAt = parseInt(expires_at)\n      }\n\n      const actuallyExpiresIn = expiresAt - timeNow\n      if (actuallyExpiresIn * 1000 <= AUTO_REFRESH_TICK_DURATION) {\n        console.warn(\n          `@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`\n        )\n      }\n\n      const issuedAt = expiresAt - expiresIn\n      if (timeNow - issuedAt >= 120) {\n        console.warn(\n          '@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale',\n          issuedAt,\n          expiresAt,\n          timeNow\n        )\n      } else if (timeNow - issuedAt < 0) {\n        console.warn(\n          '@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clok for skew',\n          issuedAt,\n          expiresAt,\n          timeNow\n        )\n      }\n\n      const { data, error } = await this._getUser(access_token)\n      if (error) throw error\n\n      const session: Session = {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        expires_in: expiresIn,\n        expires_at: expiresAt,\n        refresh_token,\n        token_type,\n        user: data.user,\n      }\n\n      // Remove tokens from URL\n      window.location.hash = ''\n      this._debug('#_getSessionFromURL()', 'clearing window.location.hash')\n\n      return { data: { session, redirectType: params.type }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n   */\n  private _isImplicitGrantFlow(): boolean {\n    const params = parseParametersFromURL(window.location.href)\n\n    return !!(isBrowser() && (params.access_token || params.error_description))\n  }\n\n  /**\n   * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n   */\n  private async _isPKCEFlow(): Promise<boolean> {\n    const params = parseParametersFromURL(window.location.href)\n\n    const currentStorageContent = await getItemAsync(\n      this.storage,\n      `${this.storageKey}-code-verifier`\n    )\n\n    return !!(params.code && currentStorageContent)\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n   * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n   *\n   * If using `others` scope, no `SIGNED_OUT` event is fired!\n   */\n  async signOut(options: SignOut = { scope: 'global' }): Promise<{ error: AuthError | null }> {\n    await this.initializePromise\n\n    return await this._acquireLock(-1, async () => {\n      return await this._signOut(options)\n    })\n  }\n\n  protected async _signOut(\n    { scope }: SignOut = { scope: 'global' }\n  ): Promise<{ error: AuthError | null }> {\n    return await this._useSession(async (result) => {\n      const { data, error: sessionError } = result\n      if (sessionError) {\n        return { error: sessionError }\n      }\n      const accessToken = data.session?.access_token\n      if (accessToken) {\n        const { error } = await this.admin.signOut(accessToken, scope)\n        if (error) {\n          // ignore 404s since user might not exist anymore\n          // ignore 401s since an invalid or expired JWT should sign out the current session\n          if (\n            !(\n              isAuthApiError(error) &&\n              (error.status === 404 || error.status === 401 || error.status === 403)\n            )\n          ) {\n            return { error }\n          }\n        }\n      }\n      if (scope !== 'others') {\n        await this._removeSession()\n        await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`)\n        await this._notifyAllSubscribers('SIGNED_OUT', null)\n      }\n      return { error: null }\n    })\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @param callback A callback function to be invoked when an auth event happens.\n   */\n  onAuthStateChange(\n    callback: (event: AuthChangeEvent, session: Session | null) => void | Promise<void>\n  ): {\n    data: { subscription: Subscription }\n  } {\n    const id: string = uuid()\n    const subscription: Subscription = {\n      id,\n      callback,\n      unsubscribe: () => {\n        this._debug('#unsubscribe()', 'state change callback with id removed', id)\n\n        this.stateChangeEmitters.delete(id)\n      },\n    }\n\n    this._debug('#onAuthStateChange()', 'registered callback with id', id)\n\n    this.stateChangeEmitters.set(id, subscription)\n    ;(async () => {\n      await this.initializePromise\n\n      await this._acquireLock(-1, async () => {\n        this._emitInitialSession(id)\n      })\n    })()\n\n    return { data: { subscription } }\n  }\n\n  private async _emitInitialSession(id: string): Promise<void> {\n    return await this._useSession(async (result) => {\n      try {\n        const {\n          data: { session },\n          error,\n        } = result\n        if (error) throw error\n\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', session)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'session', session)\n      } catch (err) {\n        await this.stateChangeEmitters.get(id)?.callback('INITIAL_SESSION', null)\n        this._debug('INITIAL_SESSION', 'callback id', id, 'error', err)\n        console.error(err)\n      }\n    })\n  }\n\n  /**\n   * Sends a password reset request to an email address. This method supports the PKCE flow.\n   *\n   * @param email The email address of the user.\n   * @param options.redirectTo The URL to send the user to after they click the password reset link.\n   * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    let codeChallenge: string | null = null\n    let codeChallengeMethod: string | null = null\n\n    if (this.flowType === 'pkce') {\n      ;[codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n        this.storage,\n        this.storageKey,\n        true // isPasswordRecovery\n      )\n    }\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n        body: {\n          email,\n          code_challenge: codeChallenge,\n          code_challenge_method: codeChallengeMethod,\n          gotrue_meta_security: { captcha_token: options.captchaToken },\n        },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets all the identities linked to a user.\n   */\n  async getUserIdentities(): Promise<\n    | {\n        data: {\n          identities: UserIdentity[]\n        }\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    try {\n      const { data, error } = await this.getUser()\n      if (error) throw error\n      return { data: { identities: data.user.identities ?? [] }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n  /**\n   * Links an oauth identity to an existing user.\n   * This method supports the PKCE flow.\n   */\n  async linkIdentity(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    try {\n      const { data, error } = await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) throw error\n        const url: string = await this._getUrlForProvider(\n          `${this.url}/user/identities/authorize`,\n          credentials.provider,\n          {\n            redirectTo: credentials.options?.redirectTo,\n            scopes: credentials.options?.scopes,\n            queryParams: credentials.options?.queryParams,\n            skipBrowserRedirect: true,\n          }\n        )\n        return await _request(this.fetch, 'GET', url, {\n          headers: this.headers,\n          jwt: data.session?.access_token ?? undefined,\n        })\n      })\n      if (error) throw error\n      if (isBrowser() && !credentials.options?.skipBrowserRedirect) {\n        window.location.assign(data?.url)\n      }\n      return { data: { provider: credentials.provider, url: data?.url }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { provider: credentials.provider, url: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n   */\n  async unlinkIdentity(identity: UserIdentity): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    try {\n      return await this._useSession(async (result) => {\n        const { data, error } = result\n        if (error) {\n          throw error\n        }\n        return await _request(\n          this.fetch,\n          'DELETE',\n          `${this.url}/user/identities/${identity.identity_id}`,\n          {\n            headers: this.headers,\n            jwt: data.session?.access_token ?? undefined,\n          }\n        )\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  private async _refreshAccessToken(refreshToken: string): Promise<AuthResponse> {\n    const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`\n    this._debug(debugName, 'begin')\n\n    try {\n      const startedAt = Date.now()\n\n      // will attempt to refresh the token with exponential backoff\n      return await retryable(\n        async (attempt) => {\n          if (attempt > 0) {\n            await sleep(200 * Math.pow(2, attempt - 1)) // 200, 400, 800, ...\n          }\n\n          this._debug(debugName, 'refreshing attempt', attempt)\n\n          return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: { refresh_token: refreshToken },\n            headers: this.headers,\n            xform: _sessionResponse,\n          })\n        },\n        (attempt, error) => {\n          const nextBackOffInterval = 200 * Math.pow(2, attempt)\n          return (\n            error &&\n            isAuthRetryableFetchError(error) &&\n            // retryable only if the request can be sent before the backoff overflows the tick duration\n            Date.now() + nextBackOffInterval - startedAt < AUTO_REFRESH_TICK_DURATION\n          )\n        }\n      )\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n      throw error\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private _isValidSession(maybeSession: unknown): maybeSession is Session {\n    const isValidSession =\n      typeof maybeSession === 'object' &&\n      maybeSession !== null &&\n      'access_token' in maybeSession &&\n      'refresh_token' in maybeSession &&\n      'expires_at' in maybeSession\n\n    return isValidSession\n  }\n\n  private async _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    }\n  ) {\n    const url: string = await this._getUrlForProvider(`${this.url}/authorize`, provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams,\n    })\n\n    this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url)\n\n    // try to open on the browser\n    if (isBrowser() && !options.skipBrowserRedirect) {\n      window.location.assign(url)\n    }\n\n    return { data: { provider, url }, error: null }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    const debugName = '#_recoverAndRefresh()'\n    this._debug(debugName, 'begin')\n\n    try {\n      const currentSession = await getItemAsync(this.storage, this.storageKey)\n      this._debug(debugName, 'session from storage', currentSession)\n\n      if (!this._isValidSession(currentSession)) {\n        this._debug(debugName, 'session is not valid')\n        if (currentSession !== null) {\n          await this._removeSession()\n        }\n\n        return\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expiresWithMargin = (currentSession.expires_at ?? Infinity) < timeNow + EXPIRY_MARGIN\n\n      this._debug(\n        debugName,\n        `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${EXPIRY_MARGIN}s`\n      )\n\n      if (expiresWithMargin) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n\n          if (error) {\n            console.error(error)\n\n            if (!isAuthRetryableFetchError(error)) {\n              this._debug(\n                debugName,\n                'refresh failed with a non-retryable error, removing the session',\n                error\n              )\n              await this._removeSession()\n            }\n          }\n        }\n      } else {\n        // no need to persist currentSession again, as we just loaded it from\n        // local storage; persisting it again may overwrite a value saved by\n        // another client with access to the same local storage\n        await this._notifyAllSubscribers('SIGNED_IN', currentSession)\n      }\n    } catch (err) {\n      this._debug(debugName, 'error', err)\n\n      console.error(err)\n      return\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _callRefreshToken(refreshToken: string): Promise<CallRefreshTokenResult> {\n    if (!refreshToken) {\n      throw new AuthSessionMissingError()\n    }\n\n    // refreshing is already in progress\n    if (this.refreshingDeferred) {\n      return this.refreshingDeferred.promise\n    }\n\n    const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`\n\n    this._debug(debugName, 'begin')\n\n    try {\n      this.refreshingDeferred = new Deferred<CallRefreshTokenResult>()\n\n      const { data, error } = await this._refreshAccessToken(refreshToken)\n      if (error) throw error\n      if (!data.session) throw new AuthSessionMissingError()\n\n      await this._saveSession(data.session)\n      await this._notifyAllSubscribers('TOKEN_REFRESHED', data.session)\n\n      const result = { session: data.session, error: null }\n\n      this.refreshingDeferred.resolve(result)\n\n      return result\n    } catch (error) {\n      this._debug(debugName, 'error', error)\n\n      if (isAuthError(error)) {\n        const result = { session: null, error }\n\n        if (!isAuthRetryableFetchError(error)) {\n          await this._removeSession()\n          await this._notifyAllSubscribers('SIGNED_OUT', null)\n        }\n\n        this.refreshingDeferred?.resolve(result)\n\n        return result\n      }\n\n      this.refreshingDeferred?.reject(error)\n      throw error\n    } finally {\n      this.refreshingDeferred = null\n      this._debug(debugName, 'end')\n    }\n  }\n\n  private async _notifyAllSubscribers(\n    event: AuthChangeEvent,\n    session: Session | null,\n    broadcast = true\n  ) {\n    const debugName = `#_notifyAllSubscribers(${event})`\n    this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`)\n\n    try {\n      if (this.broadcastChannel && broadcast) {\n        this.broadcastChannel.postMessage({ event, session })\n      }\n\n      const errors: any[] = []\n      const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {\n        try {\n          await x.callback(event, session)\n        } catch (e: any) {\n          errors.push(e)\n        }\n      })\n\n      await Promise.all(promises)\n\n      if (errors.length > 0) {\n        for (let i = 0; i < errors.length; i += 1) {\n          console.error(errors[i])\n        }\n\n        throw errors[0]\n      }\n    } finally {\n      this._debug(debugName, 'end')\n    }\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private async _saveSession(session: Session) {\n    this._debug('#_saveSession()', session)\n    // _saveSession is always called whenever a new session has been acquired\n    // so we can safely suppress the warning returned by future getSession calls\n    this.suppressGetSessionWarning = true\n    await setItemAsync(this.storage, this.storageKey, session)\n  }\n\n  private async _removeSession() {\n    this._debug('#_removeSession()')\n\n    await removeItemAsync(this.storage, this.storageKey)\n  }\n\n  /**\n   * Removes any registered visibilitychange callback.\n   *\n   * {@see #startAutoRefresh}\n   * {@see #stopAutoRefresh}\n   */\n  private _removeVisibilityChangedCallback() {\n    this._debug('#_removeVisibilityChangedCallback()')\n\n    const callback = this.visibilityChangedCallback\n    this.visibilityChangedCallback = null\n\n    try {\n      if (callback && isBrowser() && window?.removeEventListener) {\n        window.removeEventListener('visibilitychange', callback)\n      }\n    } catch (e) {\n      console.error('removing visibilitychange callback failed', e)\n    }\n  }\n\n  /**\n   * This is the private implementation of {@link #startAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _startAutoRefresh() {\n    await this._stopAutoRefresh()\n\n    this._debug('#_startAutoRefresh()')\n\n    const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION)\n    this.autoRefreshTicker = ticker\n\n    if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n      // ticker is a NodeJS Timeout object that has an `unref` method\n      // https://nodejs.org/api/timers.html#timeoutunref\n      // When auto refresh is used in NodeJS (like for testing) the\n      // `setInterval` is preventing the process from being marked as\n      // finished and tests run endlessly. This can be prevented by calling\n      // `unref()` on the returned object.\n      ticker.unref()\n      // @ts-ignore\n    } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n      // similar like for NodeJS, but with the Deno API\n      // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n      // @ts-ignore\n      Deno.unrefTimer(ticker)\n    }\n\n    // run the tick immediately, but in the next pass of the event loop so that\n    // #_initialize can be allowed to complete without recursively waiting on\n    // itself\n    setTimeout(async () => {\n      await this.initializePromise\n      await this._autoRefreshTokenTick()\n    }, 0)\n  }\n\n  /**\n   * This is the private implementation of {@link #stopAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _stopAutoRefresh() {\n    this._debug('#_stopAutoRefresh()')\n\n    const ticker = this.autoRefreshTicker\n    this.autoRefreshTicker = null\n\n    if (ticker) {\n      clearInterval(ticker)\n    }\n  }\n\n  /**\n   * Starts an auto-refresh process in the background. The session is checked\n   * every few seconds. Close to the time of expiration a process is started to\n   * refresh the session. If refreshing fails it will be retried for as long as\n   * necessary.\n   *\n   * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n   * to call this function, it will be called for you.\n   *\n   * On browsers the refresh process works only when the tab/window is in the\n   * foreground to conserve resources as well as prevent race conditions and\n   * flooding auth with requests. If you call this method any managed\n   * visibility change callback will be removed and you must manage visibility\n   * changes on your own.\n   *\n   * On non-browser platforms the refresh process works *continuously* in the\n   * background, which may not be desirable. You should hook into your\n   * platform's foreground indication mechanism and call these methods\n   * appropriately to conserve resources.\n   *\n   * {@see #stopAutoRefresh}\n   */\n  async startAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._startAutoRefresh()\n  }\n\n  /**\n   * Stops an active auto refresh process running in the background (if any).\n   *\n   * If you call this method any managed visibility change callback will be\n   * removed and you must manage visibility changes on your own.\n   *\n   * See {@link #startAutoRefresh} for more details.\n   */\n  async stopAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._stopAutoRefresh()\n  }\n\n  /**\n   * Runs the auto refresh token tick.\n   */\n  private async _autoRefreshTokenTick() {\n    this._debug('#_autoRefreshTokenTick()', 'begin')\n\n    try {\n      await this._acquireLock(0, async () => {\n        try {\n          const now = Date.now()\n\n          try {\n            return await this._useSession(async (result) => {\n              const {\n                data: { session },\n              } = result\n\n              if (!session || !session.refresh_token || !session.expires_at) {\n                this._debug('#_autoRefreshTokenTick()', 'no session')\n                return\n              }\n\n              // session will expire in this many ticks (or has already expired if <= 0)\n              const expiresInTicks = Math.floor(\n                (session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION\n              )\n\n              this._debug(\n                '#_autoRefreshTokenTick()',\n                `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`\n              )\n\n              if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {\n                await this._callRefreshToken(session.refresh_token)\n              }\n            })\n          } catch (e: any) {\n            console.error(\n              'Auto refresh tick failed with error. This is likely a transient error.',\n              e\n            )\n          }\n        } finally {\n          this._debug('#_autoRefreshTokenTick()', 'end')\n        }\n      })\n    } catch (e: any) {\n      if (e.isAcquireTimeout || e instanceof LockAcquireTimeoutError) {\n        this._debug('auto refresh token tick lock not available')\n      } else {\n        throw e\n      }\n    }\n  }\n\n  /**\n   * Registers callbacks on the browser / platform, which in-turn run\n   * algorithms when the browser window/tab are in foreground. On non-browser\n   * platforms it assumes always foreground.\n   */\n  private async _handleVisibilityChange() {\n    this._debug('#_handleVisibilityChange()')\n\n    if (!isBrowser() || !window?.addEventListener) {\n      if (this.autoRefreshToken) {\n        // in non-browser environments the refresh token ticker runs always\n        this.startAutoRefresh()\n      }\n\n      return false\n    }\n\n    try {\n      this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false)\n\n      window?.addEventListener('visibilitychange', this.visibilityChangedCallback)\n\n      // now immediately call the visbility changed callback to setup with the\n      // current visbility state\n      await this._onVisibilityChanged(true) // initial call\n    } catch (error) {\n      console.error('_handleVisibilityChange', error)\n    }\n  }\n\n  /**\n   * Callback registered with `window.addEventListener('visibilitychange')`.\n   */\n  private async _onVisibilityChanged(calledFromInitialize: boolean) {\n    const methodName = `#_onVisibilityChanged(${calledFromInitialize})`\n    this._debug(methodName, 'visibilityState', document.visibilityState)\n\n    if (document.visibilityState === 'visible') {\n      if (this.autoRefreshToken) {\n        // in browser environments the refresh token ticker runs only on focused tabs\n        // which prevents race conditions\n        this._startAutoRefresh()\n      }\n\n      if (!calledFromInitialize) {\n        // called when the visibility has changed, i.e. the browser\n        // transitioned from hidden -> visible so we need to see if the session\n        // should be recovered immediately... but to do that we need to acquire\n        // the lock first asynchronously\n        await this.initializePromise\n\n        await this._acquireLock(-1, async () => {\n          if (document.visibilityState !== 'visible') {\n            this._debug(\n              methodName,\n              'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting'\n            )\n\n            // visibility has changed while waiting for the lock, abort\n            return\n          }\n\n          // recover the session\n          await this._recoverAndRefresh()\n        })\n      }\n    } else if (document.visibilityState === 'hidden') {\n      if (this.autoRefreshToken) {\n        this._stopAutoRefresh()\n      }\n    }\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n   * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n   */\n  private async _getUrlForProvider(\n    url: string,\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    if (this.flowType === 'pkce') {\n      const [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(\n        this.storage,\n        this.storageKey\n      )\n\n      const flowParams = new URLSearchParams({\n        code_challenge: `${encodeURIComponent(codeChallenge)}`,\n        code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n      })\n      urlParams.push(flowParams.toString())\n    }\n    if (options?.queryParams) {\n      const query = new URLSearchParams(options.queryParams)\n      urlParams.push(query.toString())\n    }\n    if (options?.skipBrowserRedirect) {\n      urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`)\n    }\n\n    return `${url}?${urlParams.join('&')}`\n  }\n\n  private async _unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#enroll}\n   */\n  private async _enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse> {\n    try {\n      return await this._useSession(async (result) => {\n        const { data: sessionData, error: sessionError } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n\n        const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n          body: {\n            friendly_name: params.friendlyName,\n            factor_type: params.factorType,\n            issuer: params.issuer,\n          },\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        })\n\n        if (error) {\n          return { data: null, error }\n        }\n\n        if (data?.totp?.qr_code) {\n          data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`\n        }\n\n        return { data, error: null }\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#verify}\n   */\n  private async _verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse> {\n    return this._acquireLock(-1, async () => {\n      try {\n        return await this._useSession(async (result) => {\n          const { data: sessionData, error: sessionError } = result\n          if (sessionError) {\n            return { data: null, error: sessionError }\n          }\n\n          const { data, error } = await _request(\n            this.fetch,\n            'POST',\n            `${this.url}/factors/${params.factorId}/verify`,\n            {\n              body: { code: params.code, challenge_id: params.challengeId },\n              headers: this.headers,\n              jwt: sessionData?.session?.access_token,\n            }\n          )\n          if (error) {\n            return { data: null, error }\n          }\n\n          await this._saveSession({\n            expires_at: Math.round(Date.now() / 1000) + data.expires_in,\n            ...data,\n          })\n          await this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data)\n\n          return { data, error }\n        })\n      } catch (error) {\n        if (isAuthError(error)) {\n          return { data: null, error }\n        }\n        throw error\n      }\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challenge}\n   */\n  private async _challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse> {\n    return this._acquireLock(-1, async () => {\n      try {\n        return await this._useSession(async (result) => {\n          const { data: sessionData, error: sessionError } = result\n          if (sessionError) {\n            return { data: null, error: sessionError }\n          }\n\n          return await _request(\n            this.fetch,\n            'POST',\n            `${this.url}/factors/${params.factorId}/challenge`,\n            {\n              headers: this.headers,\n              jwt: sessionData?.session?.access_token,\n            }\n          )\n        })\n      } catch (error) {\n        if (isAuthError(error)) {\n          return { data: null, error }\n        }\n        throw error\n      }\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challengeAndVerify}\n   */\n  private async _challengeAndVerify(\n    params: MFAChallengeAndVerifyParams\n  ): Promise<AuthMFAVerifyResponse> {\n    // both _challenge and _verify independently acquire the lock, so no need\n    // to acquire it here\n\n    const { data: challengeData, error: challengeError } = await this._challenge({\n      factorId: params.factorId,\n    })\n    if (challengeError) {\n      return { data: null, error: challengeError }\n    }\n\n    return await this._verify({\n      factorId: params.factorId,\n      challengeId: challengeData.id,\n      code: params.code,\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#listFactors}\n   */\n  private async _listFactors(): Promise<AuthMFAListFactorsResponse> {\n    // use #getUser instead of #_getUser as the former acquires a lock\n    const {\n      data: { user },\n      error: userError,\n    } = await this.getUser()\n    if (userError) {\n      return { data: null, error: userError }\n    }\n\n    const factors = user?.factors || []\n    const totp = factors.filter(\n      (factor) => factor.factor_type === 'totp' && factor.status === 'verified'\n    )\n\n    return {\n      data: {\n        all: factors,\n        totp,\n      },\n      error: null,\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   */\n  private async _getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse> {\n    return this._acquireLock(-1, async () => {\n      return await this._useSession(async (result) => {\n        const {\n          data: { session },\n          error: sessionError,\n        } = result\n        if (sessionError) {\n          return { data: null, error: sessionError }\n        }\n        if (!session) {\n          return {\n            data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n            error: null,\n          }\n        }\n\n        const payload = this._decodeJWT(session.access_token)\n\n        let currentLevel: AuthenticatorAssuranceLevels | null = null\n\n        if (payload.aal) {\n          currentLevel = payload.aal\n        }\n\n        let nextLevel: AuthenticatorAssuranceLevels | null = currentLevel\n\n        const verifiedFactors =\n          session.user.factors?.filter((factor: Factor) => factor.status === 'verified') ?? []\n\n        if (verifiedFactors.length > 0) {\n          nextLevel = 'aal2'\n        }\n\n        const currentAuthenticationMethods = payload.amr || []\n\n        return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null }\n      })\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}