{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _classCallCheck = require(\"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _inherits = require(\"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _wrapNativeSuper = require(\"/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@babel/runtime/helpers/wrapNativeSuper.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PostgrestError = /*#__PURE__*/function (_Error) {\n  _inherits(PostgrestError, _Error);\n\n  var _super = _createSuper(PostgrestError);\n\n  function PostgrestError(context) {\n    var _this;\n\n    _classCallCheck(this, PostgrestError);\n\n    _this = _super.call(this, context.message);\n    _this.name = 'PostgrestError';\n    _this.details = context.details;\n    _this.hint = context.hint;\n    _this.code = context.code;\n    return _this;\n  }\n\n  return _createClass(PostgrestError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.default = PostgrestError;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;IAEqBA,c;;;;;EAKnB,wBAAYC,OAAZ,EAAoC;IAAA;;IAAA;;IAClC,0BAAMA,OAAO,CAACC,OAAd;IACA,MAAKC,IAAL,GAAY,gBAAZ;IACA,MAAKC,OAAL,GAAeH,OAAO,CAACG,OAAvB;IACA,MAAKC,IAAL,GAAYJ,OAAO,CAACI,IAApB;IACA,MAAKC,IAAL,GAAYL,OAAO,CAACK,IAApB;IALkC;EAMnC;;;iCAXyCC,K;;AAA5CC","names":["PostgrestError","context","message","name","details","hint","code","Error","exports"],"sources":["/Users/alirezaghasemi/Desktop/github/bet/client/node_modules/@supabase/postgrest-js/src/PostgrestError.ts"],"sourcesContent":["import type { PostgrestError as IPostgrestError } from './types'\n\nexport default class PostgrestError extends Error implements IPostgrestError {\n  details: string\n  hint: string\n  code: string\n\n  constructor(context: IPostgrestError) {\n    super(context.message)\n    this.name = 'PostgrestError'\n    this.details = context.details\n    this.hint = context.hint\n    this.code = context.code\n  }\n}\n"]},"metadata":{},"sourceType":"script"}